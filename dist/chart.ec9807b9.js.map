{"version":3,"sources":["../../node_modules/@kurkle/color/dist/color.esm.js","../../src/helpers/helpers.core.ts","../../src/helpers/helpers.math.ts","../../src/helpers/helpers.collection.ts","../../src/helpers/helpers.extras.ts","../../src/helpers/helpers.easing.ts","../../src/helpers/helpers.color.ts","../../src/core/core.animations.defaults.js","../../src/core/core.layouts.defaults.js","../../src/helpers/helpers.intl.ts","../../src/core/core.ticks.js","../../src/core/core.scale.defaults.js","../../src/core/core.defaults.js","../../src/helpers/helpers.canvas.ts","../../src/helpers/helpers.options.ts","../../src/helpers/helpers.config.ts","../../src/helpers/helpers.curve.ts","../../src/helpers/helpers.dom.ts","../../src/helpers/helpers.interpolation.ts","../../src/helpers/helpers.rtl.ts","../../src/helpers/helpers.segment.js","../src/core/core.animator.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/controllers/controller.bar.js","../src/controllers/controller.bubble.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/core/core.adapters.ts","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.ts"],"names":["round","v","lim","l","h","Math","max","min","exports","p2b","b2p","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","len","length","ret","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","console","warn","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope","node","root","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","interpolators","boolean","factor","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","animator","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","_length","curr","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","nestedLabel","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"mappings":"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0B,CAAC,EAAEC,CAAC,EAAEX,CAAC,CAAC;ACzExB,ED0EL,EqBgFE,IrBhFIf,CC1EQwS,ED0EL,AqBgFA,GrBhFG1S,CqBgFC,GrBhFG,CAACE,GAAG,AC1EQyS,CD0EPhR,AC1EOgR,CD0EN,EAAE/Q,CAAC,CC1EiB,CD0EfX,CAAC,AC1E2C,CD0E1C;EAC7B,AC1EA,AoB0JA,MrBhFMnB,CAAC,AC1EA6S,GD0EG,CAAC1S,CC1EM,ED0EH,GAAGC,AC1EA,GD0EG,CC1EC,GD0EG,CAAC,AC1EA,OAAOyS,KAAU,KAAA,WAAA;AAC5C,ED0EE,AqBqFAgvB,IrBrFI5hC,AqBqFJ4hC,CrBrFK,AqBqFApc,ErBrFEhjB,CAAC,EAAEpB,AqBqFA,CrBrFC,CqBqFC;ApB7Jd,EDyEE,EqBqFE,ErBrFElB,GAAG,CqBqFC0jC,IrBrFIzjC,CqBqFJyjC,ErBrFO,CqBqFC,CrBrFC,GqBqFG,CAACJ,OAAO,CAAC1e,GAAG,CAACU,KAAAA,CAAAA;IrBpF/BpkB,AqBqFA,CrBrFC,GAAGlB,AqBqFA,CAAC0jC,ErBrFE,GAAGzjC,AqBqFI,GrBrFD,CqBqFC,CAACyjC,KAAAA,CAAMxmB,KAAK,CAACnb,MAAM,EAAE;IrBpFnCO,CAAC,CqBqFC,ErBrFEzC,CAAC,GAAG,GAAG,GAAGqB,CAAC,IAAI,CAAC,GAAGlB,GAAG,GAAGC,GAAG,CAAC,GAAGiB,CAAC,IAAIlB,GAAG,GAAGC,GAAG,CAAC;IACnDH,CAAC,GAAGgD,QAAQ,CAACpB,CAAC,EAAEC,CAAC,EAAEX,CAAC,EAAEE,CAAC,EAAElB,GAAG,CAAC;ACxEhC,IDyEGF,AqBqFA,CrBrFC,GAAGA,CAAC,CqBqFCod,ErBrFE,EAAE,CqBqFJA,ErBrFO,CqBqFCwmB,ErBrFE,GqBqFFA,CAAMxmB,KAAK;ApB7JtB,EDyEL,EqBqFE,IAAIra,CpB9JQM,AoB8JRN,GAAIqa,IpB9JyBxK,CAAAA,AoB8JnB3Q,CAAAA,IpB9JiC,EAAgB,AoB8J3C,GAAG,CAAA;ErBpFzB,ACzEA,EoB+JE,EpB/JEmB,GDyEG,CAACpD,CAAC,ACzELoD,AoB+JKL,CpB/JCM,AoB+JDN,ErBtFG,CAAC,CqBsFC,CrBtFCP,AqBsFE,CrBtFD,CCzEC,AoB+JA,EAAEO,CrBtFC,AqBsFE,CrBtFD,ACzEAK,CoB+JC,CrBtFCrD,CAAC,CAAC,CCzEEsD,CAAAA,OAAO,CAACuP,KAAQ,CAAA,EAAA;AD0E7C,ICzEI,EoB+JEwK,KpB/JK,AoB+JA,CAACra,CAAE,CAAA,CpB/JC,AoB+JAsiC,MAAM,CAAA,CAAA;ArBrFrB,IqBsFI,KrBtFKliC,KAAKA,CAAC7B,CAAC,EAAEL,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACzB,ACzEA,EoB+JEyiC,IpB/JI3yB,CDyEC,AqBsFCmM,CrBrFNha,AqBqFMga,EpB/JFnM,GD0EC,AC1EMjC,AoB+JA,CrBrFL3L,EqBqFQ,EAAE,CpB/JEwP,CAAAA,CD0EL,CAAC5R,CAAC,CAAC,GACZK,CAAC,CAACL,AC3EqB,CD2EpB,AC3EqB6R,CD2EpB,CAAC,CAAC,EAAE7R,CAAC,CAAC,CAAC,AC3EqB,CD2EpB,AC3EqB8R,ED2EnB9R,CAAC,CAAC,AC3EqB,CD2EpB,AC3EqB2R,CD2EpB,CAAC,GACnBtR,AC5EsCsR,CD4ErC,AC5EqCA,CD4EpC3R,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,EACdmC,GAAG,CAAC/C,GAAG,CAAC;AACZ,EC7EE,EoB+JE,EpB/JE0Q,EoB+JE,CAAC0yB,CpB/JH1yB,CAAK+B,KAAK,AoB+JA,CpB/JC,AoB+JAwS,CpB/JG,EAAA,CAAA,CAAA,AoB+JHA,EAAOoe,GpB/JG,EoB+JIQ,EAAAA,IAAAA,CpB/JSnzB,AoB+JJozB,GAAG,CpB/JCpzB,AoB+JD,CAAI,EAAA,CpB/JHA,CAAK+B,KAAK,CAAC,CAAC,CAAA,AoB+JT,CpB/JS,AoB+JT,KpB/JgB,QAAU,EAAA;AD8ErE,EqBkFE,EpB/JE,KD6EKzP,EC7EE,IAAI,CD6ECA,CAACvD,CAAC,EAAEwC,CAAC,EAAEzC,CAAC,EAAE;EACxB,AqBuFAulC,MAAAA,CrBvFOniC,AqBuFAqiB,KrBvFK,AqBuFA,CrBvFCjjB,CqBuFC,OrBvFO,EAAEvC,CAA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AAAA,KAAU,QAAYA,IAAAA,KAAAA,CAAMc,QAAQ,CAAC,GAAA,CAAA,GAC1CC,UAAWf,CAAAA,KAAAA,CAAAA,GAAS,GAAA,GAAMa,SACxB,GAAA,CAACb,KAAAA;ADgEP,AC9DA,EqBjDE8Q,MAAS,CAAA,EAAA;AtBgHX,IsB/GI,KtB+GK1f,EsB/GE,ItB+GIA,AsB/GA,CtB+GCnE,AsB/GA4kC,CtB+GC,EAAExgC,GAAG,CsB/GC,CtB+GC;EACtB,AsB/GA,ItB+GIjE,CAAC,GAAGiD,OAAO,CAACpD,CAAC,CAAC;EAClBG,AsB9GAwmC,CtB8GC,CAAC,CAAC,CAAC,EsB9GJA,CtB8GO9iC,AsB9GAoiC,GtB8GG,AsB9GA,CtB8GC9lC,CAAC,AsB9GA8P,CtB8GC,CAAC,AsB9GA,CtB8GC,CsB9GC+zB,EtB8GE5/B,EsB9GE,CtB8GC,CAAC,AsB9GA;EtB+GtBjE,CAAC,CsB9GC,EtB8GEuD,EsB9GE,IAAI,CtB8GC,AsB9GAkhC,CtB8GCzkC,CAAC,CAAC,IsB9GI,EAAE;EtB+GpBH,CAAC,CAAC+B,CAAC,CsB9GC,EtB8GE5B,CAAC,CAAC,AsB9GA,CtB8GC,AsB9GA2jC,CtB8GC,MsB9GM,CAAC,KAAK,CAAA;EtB+GtB9jC,CAAC,CAACgC,CAAC,CsB7GC,EtB6GE7B,CAAC,CAAC,CAAC,CAAC,AsB7GA+lC,YAAAA,GAAe,IAAI,CAACI,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC;ArByCnD,EDqEEvmC,CAAC,CAACqB,CAAC,CsB7GC,CrBwCN,CDqEQlB,ACrER,CDqES,ACrET,CDqEU,CAAC,CAAC,ACrEZ,AqBxCYymC,OAAU5C,GAAAA,CrBwCtB,GqBxCsBA,GAAO,IAAI,CAACqC,MAAM;AtB8GxC,AC/DO,MqB9CD,GrB8CUryB,GqB9CJqS,KrB+CVpS,CAAAA,AqB/CmB,ErB+CF,CqB/CE,CrBgDnBC,GqBhDuB,CrBgDR,AqBhDSqxB,ErBiDxBpxB,OAAY,AqBjDqB,ErBkDlB,CqBlDqByyB,OAAAA;AtB8GtC,EC3DE,IAAI3yB,AqBlDA,ErBkDM,CD2DH5P,CsB7GC,CAACgiC,CrBkDC,K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B1EHgQ,GrB0EGhQ,AqB1EQ,CrB0ECkB,GqB1EG,CAACixB,IrB0EO,CAAA,EAAA,EqB1EE;EtB8GjCzkC,CAAC,CCnCCoO,AqB1EA,CtB6GC,GCnCMC,CDmCF,CsB7GC6jB,CrB0EC7jB,GqB1ED6jB,GrB0EC7jB,AqB1EM,CrB0ECD,GqB1EG,CrB0EC,AqB1EAq3B,CrB0ECjyB,IqB1EI,IrB0EJA,CAAAA;EDoCrBzP,CAAC,CCnCC1C,AqB1EA,CtB6GC,ECnCDA,EDmCK,CCnCC+M,AqB1EAiB,IrB0EAjB,AqB1EAiB,CrB0EK/N,EqB1EE,IrB0EI,AqB1EA,CAACokC,KAAK;EtB8GzB1hC,CAAC,CCnCC,AqB1EA,CtB6GC,IAAI,ACnCA5B,CAAI,AqB1EHogB,GrB0EG,CAAA,AqB1EHA,ErB0EMpgB,CAAIf,AqB1EH,GrB0EGA,CqB1EC,CAAC+/B,CrB0EF//B,EAAKe,CAAK,CqB1EH,CrB0EG,EAAA;EDoC5BnC,CAAC,CsB7GC,CtB6GC,CCnCCkT,EAAAA,CDmCG,ACnCAf,CqB1ECjD,EAAAA,CrB0EG,CAACkE,CqB1EC,IAAI,CAACsyB,CrB0EGnyB,EAAAA,AqB1EA,QrB0EQ,CAACpF,IAAI,CAAChM,CAAAA,CAAE,CAAC,EAAEgM,IAAI,CAAChM,CAAE,CAAA,CAAA;EDoC/ClC,CAAC,CCnCC,AqB1EA,CtB6GC,GsB7GG4kC,ItB6GI,EsB7GJA;EtB8GN3kC,CAAC,CsB5GC,CtB4GC,GsB5GG,CAAC2jC,GtB4GG,IsB5GI,GAAGz0B,IAAAA,KAASF,EAAAA,KAAOqT,IAAAA,IAASsjB,OAAAA,GAAUxjB,QAAQ,CAAA;ArB0E9D,EDmCEre,CAAC,CsB3GC,CtB2GC,GsB3GG,CtB2GC,AsB3GA,IAAI,CAAC6/B,OAAO,EAAE;ArB0EvB,EDkCE5/B,CAAC,EAAE,CsB3GC,IAAI,CAACshC,ItB2GI,GsB3GG,CAACtT,IAAAA,CAAK,GAAG/iB,EAAAA;EtB4GzB/O,CAAC,EAAE,CsB3GC,GtB2GG,CsB3GC,CAAC4iC,OAAO,CAAC,IAAI,CAAA;EtB4GrB7+B,CAAC,EAAE,CsB3GC,GtB2GG;EACPC,CAAC,EAAE,IAAI;EACPC,CAAC,CsB1GC,CtB0GC,GsB1GGyhC,CtB0GC,MsB1GDA,GAAU,CAAG,EAAA;ArByEpB,EDkCCxhC,CAAC,EAAE,CsB1GC,GtB0GG,CsB1GC,CAACkhC,OAAO,CAACtT,IAAAA,CAAK,GAAG7iB,IAAAA;ArByEpB,EDkCL9K,CAAC,EAAE,CsB1GC,GrBwEUmP,GDkCJ,WClCIA,CAAeC,EAAqB,EAAEC,EAAqB,EAAE;EDmC3EvT,AClCA,CDkCC,EAAE,CClCC+B,CAAAA,EDkCG,AClCQyR,IAAAA,EAAcC,EAAqBC,EAAAA,EAAAA;EDmClDvP,ACjCA,CDiCC,CsBzGCsgC,CtByGC,CCjCC,CAACnxB,EDiCE,ACjCFA,CqBxEM,GrBwEA,AqBxECmyB,CrBwEAlyB,EAAAA,IAAMD,AqBxENmyB,ErBwEMnyB,CAAGrS,AqBxECghB,MrBwEK,EqBxEO,GrBwEF1O,AqBxEE,CAAA,CrBwECtS,CAAAA,MAAM,EAAE;EDkC3CmD,CAAC,CCjCC,AqBxEAqgC,CtByGC,KsBzGDA,CtByGO,ACjCA,EqBxEEtiB,GrBwEG,CqBxEKsiB,IAAAA,MAAAA,GAAS,CAAI,GAAA,CAAA,GAAIA,MAAAA,GAASA,MAAM;EtB0GnDpgC,CAAC,CsBzGCogC,CtByGC,IAAI,CsBzGI,GAAA,IAAI,CAACQ,OAAO,CAAChmC,IAAAA,CAAKE,GAAG,CAAC,CAAGF,EAAAA,IAAAA,CAAKC,GAAG,CAAC,CAAGulC,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA;EtB0GhDngC,AChCA,CDgCC,CsBxGC,CtBwGC,EChCEvC,CAAAA,AqBxEC,CAACojC,ErBwEE,CDgCC,AChCD,EAAG3xB,EqBxEE,CAACqe,CrBwEIve,GAAAA,AqBxEC,CAAA,CrBwEDA,CAAGrS,CqBxEC,IAAI,CrBwEC,AqBxEA+jC,ErBwEEjjC,CAAAA,AqBxEC,CAACiN,ErBwEEwE,EqBxEFxE,ErBwEQ,AqBxEFF,ErBwEE,AqBxEE21B,ErBwEA1iC,AqBxEA0iC,CrBwEG,EAAA,GqBxEHA,CAAAA;EtByG1ClgC,AsBxGA,CtBwGC,CChCCkP,CDgCC,CChCIH,GAAAA,EAAE,CAACvR,CAAE,CAAA;ADiCd,CAAC,CsBvGC2jC,ErBuEEhyB,EAAKH,AqBvEA,CAAA,ErBuEAA,AqBvEA,ErBuEE,CAACxR,CAAE,CAAA;ADiCd,IC/BI,AqBxEA,EtBuGEyC,EC/BEiP,EAAAA,AqBxEEkyB,CrBwEChyB,ED+BE,GAAG,EsBvGNgyB,GAAW,ErBwEE,EqBxEE,CAACJ,ErBwEE7xB,EAAGC,CAAAA,IqBxEI,KAAK,GrBwEG,CqBxEC,CAAC4xB,ErBwEE9xB,EAAAA,CAAGG,IqBxEI,CrBwEC,EqBxEE,EAAE,CrBwECF,AqBxEF,ErBwEKE,CAAAA,KAAK,EAAE;EDgCpEnP,EsBvGE,ErBwEE,ED+BE,EAAE,CsBvGC,ErBwEE,EqBxEEmhC,GtBuGG,AC/BA,IqBxEHA,CAAQ,CAAC9pB,GAAAA,EAAK+pB,GAAQ,KAAA;EtBwGnCnhC,IsBvGIihC,OtBuGO,CsBvGPA,CtBuGS,AsBvGAhwB,IAAI,CAAC,GtBuGG;EACrBhR,AC/BA,ID+BI,EAAE,AsBxGamX,GAAAA,GtBwGP;EACZlX,AC9BA,MqB3EwBihC,CrB2EjB,ED8BE,EAAE,AC9BA,QD8BQ;AC7BrB,ED8BEhhC,IAAI,AsB1GuB,CAAA,CtB0GrB,AsB1GqB,QtB0Gb;AC5BhB,ED6BEC,EsB1GE,CAAA,CAAA,CtB0GG,EAAE,QAAQ;EACfC,AsB1GA,MtB0GM,EAAE,QAAQ;EAChBC,AsBzGA29B,KtByGK,EAAE,AsBzGPA,CAAQmD,EtByGE,MsBzGM,EAAE;ArB6EnB,ED6BC7gC,EsBzGE,MAAM2W,ItByGI,EAAE,AsBzGNA,GAASkqB,KtByGK,GsBzGM,GAAA,KAAA,GAAQ,KAAK;ArB6EpC,ED6BL5gC,EAAE,AsBzGA,EtByGE,GC7BUsK,CD6BN,AsBzGAm2B,IrB4Ee9xB,CAAAA,GqB5EJ,GrB4Ea,AqB5Eb,ErB4EkB,EqB5Ed,CAAC0xB,SAAS,IAAI,EAAE;EtB0GvCpgC,AC7BA,EqB5EE,ErB4EE9C,GD6BG,AsBzGA,EtByGE,EC7BLA,AqB5EON,CrB4EC8R,AqB5EG,GAAA,CAAA,CtByGE,CC7BI,AqB5EH9R,CrB4EG,AqB5EHA,ErB4EG,CqB5EC4jC,QAAS1kC,CAAAA,MAAM,EAAEc,CAAK,EAAA,EAAA;EtB0G5CqD,EC7BE,ED6BE,AsBzGAugC,EtByGE,GC7BG9xB,GqB5EG,CAAC9R,CtByGC,AsBzGC,CrB4EN8R,AqB5EM,CrB4ECvR,AqB5EAsZ,GrB4EG,CAACpM,EqB5EG,CAAA,CAAA,CrB4EHA,AqB5EG,CrB4EHA;ED8BpBnK,EsBzGE,OtByGO,EAAE,QAAQ;EACnBC,AC5BA,AqB7EA,IrB6EI2M,ED4BE,EAAE,IC5BJA,CAAS4B,GD4BG,GC5BM,CAAA,EAAA;AqB5ExB,EtByGEtO,EC5BE,MD4BM,AC5BAuO,ED4BE,IC5BO9F,GAAAA,CD4BC,KC5BDA,CAAO+F,MAAM,CAAC,IAAI,CAAA;AqB7ErC,EtB0GEvO,EC5BE,GqB9EJ,CAAA,CtB0GS,CC5BCuI,CD4BC,GC5BDA,GAAOC,AqB9EjB,EtB0GmB,CsB1GnB,GrB8EwBD,CAAAA,IAAI,CAAC8F,AqB9E7B,MrB8E6BA,CAAAA;AsB/Ld,EvB4NbpO,EC5BE,CD4BC,CuB5NgBsgC,CvB4Nd,GC5BG/xB,IAAAA,CD4BK,CuB5NM+xB,CtBgMJh4B,AsBhMIg4B,ItBgMJh4B,CAAK9M,MAAM;ED6B1ByE,AuB5NAsK,EtBgME,IAAItO,CAAI,GAAA,CD4BC,AC5BD,AsBhME8iB,CAAAA,CvB4NC,IuB5NI,EAAEwhB,EvB4NE,IuB5NI,EAAE;EvB6N3BrgC,EC3BE,AsBjMA,IAAI,CvB4NC,AuB5NA07B,EvB4NE,AC3BA3/B,CAAAA,GAAIsS,AsBjMA,GAAGwQ,CvB4NC,AC3BE,EAAA,EAAE9iB,AsBjML8iB,CtBiMQ,EAAA;ED4BxB5e,EuB5NE,EtBiMEkO,EsBjME,CvB4NC,AuB5NAmyB,EvB4NE,CC3BC,CAACl4B,IAAI,CAACrM,CD2BC,AC3BDA,CAAE,AsBjMA,CtBiMC,EsBjME,CtBiMC8N,GsBjMG+T,EtBiMG1P,CAAAA,AsBjMH0P,CAAAA,CAAAA,ItBiMS,CAACxV,IAAI,CAACrM,CAAAA,CAAE,CAAC,CAAA;ED4B3CmE,EC3BE,AsBjMA,EvB4NE,EAAE,AuB5NA,CAACqgC,KvB4NK,IuB5NI,CAACF,MAAAA,CAAAA;EvB6NjBlgC,AuB5NA,EtBkME,CD0BC,EAAE,IAAI,AC1BAgO,MAAAA;ED2BT/N,AuB3NAmgC,KvB2NK,EAAE,EuB3NPA,CAAUF,GvB2NG,GuB3NG,EAAE;EvB4NlBhgC,ACzBA,EsBlME,IAAI,CvB2NC,ACzBA6N,AsBlMA5B,EvB2NE,EuB3NFA,EtBkMA4B,IDyBU,WuB3NV5B,EAAS+zB,MAAS,CAAA,EAAA;AtBmM3B,EDyBE//B,IAAI,AuB3NA,EvB2NE,QAAQ;ACvBhB,EDwBEC,IAAI,EAAE,CCxBC+N,KDwBK,KCxBLA,CAAWC,GAAW,EAAE;EDyB/B/N,ACxBA,EsBlME,EvB0NE,EAAE,CCxBC,CAAC,AsBlMAggC,MvB0NM,KCxBN,EAAa,GsBlMMn4B,GAAAA,KtBkMN,CsBlMMA,CtBkMO,AsBlMAD,IAAI,CAACiU,QtBkML,CAAc,CAAC7N,OAAO,AsBlMjB6N,CtBkMkB9N,AsBlMTyO,GtBkMSzO,CAAAA,KAAS,AsBlMT,CtBkMU,AsBlMV,CtBkMU;AACrE,EDwBE9N,EuB1NE,IvB0NI,EAAE,AuB1NAggC,QvB0NQ,KuB1NRA,GAAgB,IAAI,CAACH,WAAW;AtBoM1C,EDuBE5/B,EuBzNE2H,KvByNK,CuBzNLA,CvByNO,AuBzNAq4B,QvByNQ,WuBzNW,CAACL,MAAAA,CAAAA,CAAQrqB,OAAO,CAACzH,GAAO,IAAA;EvB0NpD5N,IuBzNI,IvByNI,EAAE,AuBzNAw+B,GAAAA,GAAMkB,EvByNE,IuBzNI,CAAC9xB,GAAI,CAAA;EvB0N3B3N,IuBzNI,EvByNE,EAAE,AuBzNA,CAAC0L,IAAAA,GvByNO,cuBzNPA,EAAS6yB,GAAM,CAAA,EAAA;EvB0NxBt+B,KAAK,CuBzNC,CvByNC,QAAQ;EACfC,GAAG,EAAE,QAAQ;ACtBR,EDuBLC,IuBzNI,EvByNE,CCvBQ0N,CDuBN,EuBzNE0xB,ItBkMI1xB,CAAQF,CDuBN,ECvBiB,AsBlMvB4xB,EtBkMyBhyB,CsBlMd,CAAA,CAAC,GtBkM8B,EAAED,MAAiB,EAAEQ,OAAkB,EAAE;EDwB7F1N,ACvBA,IAAI,AsBlMA,CtBkMCsN,CDuBC,EAAE,CuBzNC,MtBkMJA,AsBlMUqyB,CvByNC,ACvBApyB,GAAM,CAAA,CsBlMPoyB,CtBkMO,GsBlMGH,gBAAkB,EAAA;EvB0N3Cv/B,ECvBE,EDuBE,EAAE,AuBzNAk/B,QvByNQ,AuBzNA,CAACQ,MAAAA,CAAO,GAAGxB,GAAG,CAACwB,MAAO,CAAA;EvB0NpCz/B,IuBzNI,CvByNC,EAAE,QAAQ;EACfC,ACtBA,IsBlMKzE,CvBwNA,AuBxNAA,CtBkMCiS,CDsBC,EuBxNFjS,CtBkMCiS,GAAOR,EDsBE,ICtBI,CAACI,GAAI,CAAA,EsBlMnB7R,EAAQyiC,GAAIriB,CAAAA,UAAU,CAAKqiB,IAAAA,GAAAA,CAAIriB,UAAU,IAAI,CAACvO,GAAAA,CAAG,EAAGyH,OAAO,CAAEkW,IAAS,IAAA;EvByN3E9qB,ACtBA,GDsBG,EAAE,CCtBCwN,AsBlMA,ItBkMAA,AsBlMIsd,CvBwNC,ECtBEhe,CsBlMHge,KtBkMS,AsBlMA3d,CtBkMCA,EsBlMM,CtBkMF,CAAA,EsBlME,CAACkyB,aAAc9vB,CAAAA,GAAG,CAACub,IAAO,CAAA,EAAA;EvByNpD7qB,ACrBA,IAAIiL,EDqBE,EAAE,AuBxNAm0B,ItBmMJn0B,CAASqC,GDqBG,CCrBMrC,CAAAA,GsBnMAoK,CtBmMApK,AsBnMAoK,GAAG,CAACwV,ItBmMJ5f,AsBnMU6zB,CtBmMDvxB,CsBnMCuxB,GtBmMM,CAAA,EAAA,EsBnMNA,CAAAA;EvByNhC7+B,MAAM,EAAE,QAAQ;EAChBC,ECrBEsN,EsBnME,CAAA,CAAA,CtBmMFA,CDqBM,ACrBAF,EDqBE,ECrBFA,EAAMC,EDqBE,ECrBIF,EAAAA,OAAAA,CAAAA;EDsBpBlN,CCrBO,CsBnML,CAAA,CAAA,EvBwNI,CCrBC,CDqBC,QAAQ;EAChBC,AuBxNA,EtBmME0M,IDqBI,EAAE,ACrBA,CAACI,GAAI,CAAA,GDqBG,ACrBA1E,KAAM+E,CAAAA,IAAAA,CAAAA;EDsBtBlN,AuBnNAk/B,QvBmNQ,EAAE,KuBnNMzyB,CAAAA,EvBmNE,IuBnNI,EAAEoH,MAAM,EAAE;AtB+LlC,EDqBE5T,EuBnNE,MvBmNM,AuBnNAk/B,EvBmNE,QAAQ,AuBnNVA,GAAatrB,MAAAA,CAAO7G,OAAO;AtBwN9B,EDJL9M,EuBnNE,KtBuNYiN,CDJN,AuBnNAH,EvBmNE,ECIaP,CAAAA,EsBvNfO,GvBmNU,AuBnNAoyB,CtBuNc,EAAE5yB,MAAmB,EAAEQ,OAAsB,EAAa,AsBvNxEoyB,CAAqB3yB,MAAQ0yB,EAAAA,UAAAA,CAAAA;EvBoN/Ch/B,ACIA,EsBvNE,ItBuNIiN,AsBvNA,CAACJ,CvBmNC,EAAE,GCIJI,CsBvNU,EtBuNApS,AsBvNA,EvBmNE,KCIMwR,CAAAA,MAAAA,CAAAA,GAAUA,MAAS,GAAA,CAACA,MAAAA,CAAO;EDHnDpM,ACIA,IsBvNI,EvBmNE,ACIA+L,EDJE,ECIFA,CsBvNK,EtBuNEiB,AsBvNA,GvBmNG,ICIHA,CAAQxT,MAAM;EDH3ByG,ACKA,IAAI,CAACuK,EDLE,EAAE,ICKJA,CAAS6B,GDLG,GCKM,CAAA,EAAA;EDJvBnM,ECKE,AsBvNA,MAAMmb,CvBkNC,ACKAhP,EDLE,ICKFA,GsBvNY,CvBkNF,EuBlNE,IAAI,CAAC4yB,iBAAiB,CAACryB,OAASmyB,EAAAA,UAAAA,CAAAA;EvBmNrD5+B,EuBlNE,CvBkNC,EAAE,CuBlNC4+B,OvBkNO,GuBlNPA,CAAWG,OAAO,EAAE;EvBmN1B9+B,ACMAwM,IsBrNIuyB,EvB+ME,CCMNvyB,CDNQ,ECMEA,EsBrNGP,CAAAA,GvB+MG,CCMNO,EsBrNGP,CAAOO,CtBqNC,CAAA,CAAC,IsBrNK,CAACwyB,WAAW,EAAEL,UAAYM,CAAAA,CAAAA,IAAI,CAAC,MAAM;EvBgNhEh/B,ACMA,GDNG,EAAE,CCMC4M,AsBrNAZ,MtBqNAY,AsBrNAZ,CvB+MO,AuB/MAO,EtBqNEA,KsBrNK,EtBqNGK,CAAAA,AsBrNA8xB,MtBqNM,IAAIpyB,AsBrNVoyB,OtBqNUpyB;EDLjCrM,ACMA,GDNG,CCMC4M,AsBrNA,CvB+MC,AuB/MD,EAAG,IvB+MI,ACMPA,EsBrNS,CAET,CAAA,CAAA;EvB8MJ3M,ACOA,KDPK,ACOA,EDPE,ECOEjG,CAAI,GAAA,CAAA,CDPE,CCOCA,CAAIyR,GAAAA,IAAAA,EAAM,EAAEzR,CAAG,EAAA;EDN/BkG,ECOE0M,AsBnNA,CvB4MC,EAAE,ICOOF,AsBnNHqO,GtBmNGrO,CDPC,MCOM,AsBnNVqO,CtBmNW/gB,CAAE,CAAA;EDNtBmG,AuB5MA,EtBmNE,IAAI,CDPC,ACOA+J,EDPE,MCOFA,CAAS0C,CDPC,MCOS,CAAA,EAAA;EDN1BxM,AuBxMAu+B,ItB+MI,EDPE,EAAE,QAAQ,CuBxME5yB,CAAAA,MAAM,EAAEoH,MAAM,EAAE;EvByMlC9S,EuBxME,KvBwMK,CuBxMCg+B,CvBwMC,QAAQ,IuBxMTA,GAAgB,IAAI,CAACH,WAAW;EvByMxC59B,ECQE,AsBhNA,GvBwMG,EAAE,CCQC0F,AsBhNA+U,ItBgNA/U,GDRO,ACQAC,GsBhNP8U,GtBgNc/U,AsBhND,CtBgNCA,CsBhNC,GtBgNG,CAAC4G,OAAAA,CAAAA;EDP3BrM,ECQE,AsBhNA,EvBwME,EAAE,CCQC,CsBhNCi7B,GtBgNG7hC,CAAI,EDRD,CCQC,AsBhNP6hC,CtBgNO,EAAGvvB,AsBhNAF,ItBgNO/F,EsBhNP+F,CtBgNO/F,AsBhNA84B,ItBgNA94B,CAAK9M,MAAM,AsBhNA,EtBgNES,CAAAA,EsBhNGoS,CtBgNCE,IAAM,CsBhNA6yB,CtBgNA,AsBhNAA,EtBgNEnlC,CAAG,EAAA,MsBhNM,GAAG,CAAA,CAAC,CAAA;EvByM/D6G,EuBxME,EtBgNEmM,CDRC,EAAE,CuBxMCgd,EtBgNJhd,CAAO3G,EsBhNH2jB,EvBwMO,ACQA,CAAChwB,AsBhNAsM,CtBgNE,CAAA,EAAE8F,EsBhNG/F,CAAAA,GtBgNH+F,CsBhNO,CtBgNCa,AsBhNAuG,MAAAA,CtBgNS7G,AsBhNT6G,EtBgNS7G,OAAAA,CAAAA;EDPrC7L,ECQE,AsBhNA,IvBwMI,EAAE,AuBxMAq6B,IAAAA,GAAOO,CvBwMC,GuBxMDA,CAAKC,GAAG,CAAA,CAAA;EvByMvB56B,ACQA,EsBhNE,IAAI1G,CAAAA,EvBwMG,EAAE,QAAQ;EACnB2G,ACSA,EsBhNE,KvBuMK,ACSAoL,AsBhNA/R,CAAAA,CvBuME,EuBvME2vB,EtBgNJ5d,GsBhNI4d,CvBuMM,AuBvMAzwB,MAAM,GAAG,CAAA,EAAGc,CAAK,IAAA,CAAA,EAAG,EAAEA,CAAG,EAAA;AtBiN5C,EDTE4G,IuBvMI,MvBuMM,AuBvMAkpB,EvBuME,EuBvMFA,GAAOH,GvBuMG,EuBvME,CAAC3vB,CAAE,CAAA;AtBgOpB,EDxBL6G,GAAG,CuBvMC,CvBuMC,ECwBSgM,CsB/NNid,IAAK/hB,CvBuMA,AuBvMAA,CtB+NC8E,CAAWd,IsB/NN,CAAC,CtB+Nc,AsB/Nd,CAAA,CtB+NgBD,IsB/NT,EtB+N4B,CsB/NvB,CtB+NoC,CsB/NpC;EvBwMhChL,IAAI,EAAE,AuBvMA,QvBuMQ;EACdC,ACwBA,KDxBK,EAAE,ACwBA0L,KAAAA,CAASV,EDxBD,ICwBCA,EAAQD,MAAQ,EAAA;EDvBhC9K,ECuBiC2L,EsB7N7B,ItB6NqCG,AsB7NjCgd,CvBsMC,CCuBgChd,CDvB9B,CuBtMHgd,KAAS,EvBsME,OuBtMS,EAAA;EvBuM5B7oB,ACsBkD,CAAA,CAAA,EDtB9C,EAAE,AuBtMA8Z,QvBsMQ,EuBtMRA,CAAWnN,IAAI,CAAI,GAAA,IAAI,CAAC4wB,eAAe,CAACzyB,MAAQoH,EAAAA,MAAAA,CAAAA,CAAAA;AtB6NxD,EDtBEjS,IAAI,EAAE,AuBtMA,QvBsMQ;ACwBhB,EDvBEC,IAAI,EAAE,QAAQ;EACdC,IAAI,AuBtMA,EvBsME,IuBtMIyI,IvBsMI,CuBtMJA,GAAQsJ,MAAM,CAAC2W,IAAK,CAAA;EvBuM9BzoB,IuBtMI,EvBsME,EAAE,AuBtMAuZ,QvBsMQ,CuBtMRA,GAAY4gB,OAAO,CAAC1R,IAAK,CAAA;EvBuMjCxoB,IuBtMI,EvBsME,EAAE,EuBtMEy7B,GAAAA,GvBsMM,AuBtMAsB,aAActiB,CAAAA,GAAG,CAAC+N,IAAAA,CAAAA;AtB8N7B,EDvBLvoB,IuBrMI,EvBqME,CCuBQuL,CDvBN,AuBrMA8N,QvBqMQ,ACuBQzO,CAAAA,AsB5NL,EAAA,CtB4NgB,EAAEJ,MAAiB,EAAED,MAAiB,EAAE;EDtB3EtK,ACuBA,IAAI,CDvBC,ACuBA0K,CsB5NC,CvBqMC,GuBrMG6wB,GAAAA,EvBqMK,ACuBV7wB,CAAWC,CsB5NCyO,EtB4NK,CAAA,EAAA,IsB5NKD,CAAAA,MAAM,CAAA,CAAI,EAAA;EvBsMrClZ,ECuBE,GDvBG,EAAE,CuBpMCmZ,OvBoMO,EuBpMG6iB,CAAAA,MAAM,CAACV,GAAAA,EAAKlzB,KAAOixB,EAAAA,IAAAA,CAAAA;EvBqMrCp5B,OAAO,CuBpMC,CvBoMC,QAAQ;EACjBC,ACwBA,GDxBG,EAAE,CCwBC4K,CsB5NO,GtB4NPA,GDxBO,ACwBAR,AsB5NA,MtB4NM,CAACI,GAAI,CAAA;EDvBxBvK,ACwBA,IDxBI,EAAE,ACwBA4K,EsB5NEoO,EtB4NFpO,EDxBM,CCwBCV,IsB5NL8O,CAAU0hB,CtB4NC,CAACnwB,GAAI,CAAA,AsB5NA,CAAA,CAAA;EvBqMxBtK,ACyBA,IAAIqI,GDzBG,EAAE,GCyBLA,CAASqC,IDzBI,ACyBKrC,CAAAA,IAAAA,QAAAA,CAASsC,IAAO,CAAA,EAAA;EDxBtC1K,ECyBE+K,CDzBC,EAAE,ICyBHA,CAAQN,GDzBG,CCyBGC,EAAAA,IAAAA,CAAAA;EDxBhBzK,CCyBO,GsB7NH,EvBoME,CCyBC,CDzBC,AuBpMA,CAACg7B,EtB6NE,CAAC92B,AsB7NH82B,IvBoMO,AuBpMA,CAACA,CtB6NL92B,CAAO6D,CsB7NFizB,CAAI7iB,OtB6NO,CAACnN,AsB7NA,EAAE,YtB6NY,CAAC/C,IAAI,CAAC+B,MAAAA,EAAQI,GAAM,CAAA,EAAA;EDxB/DnK,ECyBE+J,GDzBG,CuBnMCA,CvBmMC,CCyBC,CAACI,GAAI,AsB5ND,CtB4NC,AsB5NA2d,EvBmME,CCyBCriB,CsB5NHqiB,CAAK,GtB4NItd,AsB5ND3C,CtB4NC2C,IAAAA,AsB5ND3C,CtB4NC2C;EDxBtBvK,MuBnMM,IvBmMI,EAAE,QAAQ;AC0BtB,EDzBEC,GAAG,EAAE,IAAI;AC2BX,ED1BEC,IuBlMIq5B,CvBkMC,EAAE,IuBlMI,CAAC1R,GvBkMG,CuBlMHA,CAAK,GAAGlP,SAAAA,GAAY,IAAIkiB,SAAUC,CAAAA,GAAAA,EAAKhxB,MAAAA,EAAQ+d,IAAMjgB,EAAAA,KAAAA,CAAAA;EvBmMjEzH,IuBlMI2Y,EvBkME,EAAE,MuBlMJA,CAAWnN,CvBkMC,GuBlMG,CAACgN,SAAAA,CAAAA;EvBmMpBvY,EuBlME,IvBkMI,EAAE,QAAQ;AC2BX,ED1BLC,EuBlME,EvBkME,EAAE,CC0BQ0K,EsB5NL+N,KvBkMK,IC0BA/N,CAAYC,AsB5NjB8N,KtB4N8B,EAAElR,KAAc,EAAEqD,QAAgB,EAAEN,OAAe,EAAE;EDzB5FrK,AC0BA,AsB5NA,ItB4NIsH,KD1BK,AC0BLA,ED1BO,GC0BGvQ,GD1BG,MC0BQ,EAAA;EDzBzBkJ,AuB1LAi7B,EtBoNEtwB,CD1BC,EAAE,CuB1LEpB,CAAAA,EtBoNLoB,CAAQC,GD1BG,AuB1LA,CtBoNC,CAACH,AsBpNAkG,KtBoNAlG,CsBpNM,EtBoNE,AsBpNA,KtBoNQC,GAAAA,QAAAA,GAC3B,+BAAA,GAAkCN,OAAU,GAAA,WAAA,CAAA;ED1BhDnK,EuB1LE,IAAI,EvB0LE,EAAE,AuB1LA,CAACy7B,OvB0LO,IuB1LI,CAAC7vB,IAAI,KAAK,CAAG,EAAA;AtBsNrC,ED3BE3L,IuBzLIuD,MvByLM,AuBzLC0B,CAAAA,CvByLC,KuBzLK,CAACoE,EvByLE,IuBzLMoH,EAAAA,MAAAA,CAAAA;AtBsN5B,ED5BExQ,IuBzLI,GvByLG,EAAE,QAAQ;AC6BnB,ED5BEC,IC4BIyK,ID5BI,EAAE,MC4BS,ED5BD,CC4BC;ED3BnBxK,EuBxLE,KvBwLK,CuBxLCkY,CvBwLC,QAAQ,CuBxLI,GAAA,IAAI,CAAC4jB,iBAAiB,CAAC5yB,MAAQoH,EAAAA,MAAAA,CAAAA;EvByLpDrQ,AC4BA,EAAA,AsBnNE,EtBmNEhM,CAAKA,CsBnNHikB,GtBmNGjkB,CD5BC,AC4BDA,ED5BG,IuBvLNikB,CAAW7hB,GvBuLG,GuBvLG,EAAE;EvBwLzB6J,IAAI,AuBvLAi8B,EvBuLE,IAAI,EuBvLNA,CAASpU,GAAG,CAAC,IAAI,CAAC0O,MAAM,EAAEve,UAAAA,CAAAA;EvBwL9B/X,AC4BA5H,CAAGkS,EAAAA,CAAKA,AsBnNJ,EvBuLE,EAAE,AC4BAA,CAAAA,CAAElS,CAAC,AsBnNA,IAAI,CvBuLC;EAChB6H,AC4BAsK,CAAGD,EAAAA,CD5BC,AC4BIA,ED5BF,EC4BEA,CAAAA,CAAEC,ID5BI;AC6BhB,CAAA,CD5BErK,AuBvLA,OvBuLO,EAAE,QAAQ;AC8BnB,AsBpNA,EvBuLEC,KAAK,EAAE,QAAQ;AuBvLhB,EvBwLCC,KuBxLD,CAAA,CvBwLQ,EAAE,OuBxLV,CvBwLkB,EuBxLlB,UAAA;AtBsNA,AsBpND,EvBuLEC,IAAI,EAAE,CuBvLCw7B,OvBuLO,CuBvLE9jB,CAAAA,UAAU,EAAEL,UAAU,EAAE;AtBqNnC,ED7BLpX,AuBvLA,MAAMk4B,CtBoNQhuB,ED7BL,EAAE,EuBvLLguB,GtBoNkBrvB,AsBpNR,CtBoNQA,CsBpNN,CvBuLC,CC6BgB,EAAE;ED5BrC5I,AC6BA,AsBpNA,MvBuLM,AC6BAkK,AsBpNAzH,EvBuLE,EuBvLFA,CtBoNAyH,EsBpNOxH,CtBoNCkG,ED7BE,CC6BEuB,CAAAA,CsBpNE1H,CAAAA,GtBoNG,CAAC,AsBpNA,CAAC0U,EtBoND,CAAA,OsBpNCA,CAAAA;EvBwLzBlX,AC6BA,AsBpNA,KvBuLK,AuBvLA,CtBoNCwC,CD7BC,EuBvLEhM,CtBoNHgM,AsBpNO,GtBoNU,AsBpNV,CAAA,CvBuLE,AC6BU,CsBpNThM,CAAAA,GAAIgM,IAAK9M,CAAAA,MAAM,EAAEc,CAAK,EAAA,EAAA;EvBwLtCyJ,AC6BA,EsBpNE,EtBoNE+D,GAAM,CsBpNFy3B,EvBuLE,AC6BA,ED7BE,AC6BF,AsBpNFA,GAAOlkB,KvBuLK,KuBvLK,CAAC/U,IAAI,CAAChM,CAAAA,CAAE,CAAC;EvBwLlC0J,AC6BA,EsBpNE,GtBoNG,CsBpNCu7B,GvBuLG,CuBvLHA,CvBuLK,AC6BAtxB,GsBpNGsxB,CtBoNHtxB,GsBpNQgN,CvBuLA,AC6BAlN,AsBpNAkN,KtBoNO,CsBpND,CtBoNC,AsBpND,CAAI,EAAA;EvBwL7BhX,EC6BE6D,EsBpNEg0B,CtBoNK7tB,ED7BF,EAAE,AC6BAA,EsBpNGC,CAAAA,CtBoNHD,GsBpNO,CvBuLC,AuBvLAsxB,IAAAA,CAAKtB,IAAI,CAAA,CAAA,CAAA;EvBwL1B/5B,EC6BE,ED7BE,EAAE,AC6BA4D,GAAAA,CAAImD,ID7BI,IC6BI,CAAC,IAAO,CAAA,EAAA;ED5B1B9G,AuBvLA,GvBuLG,CC6BC2D,CD7BC,EC6BDA,GAAMA,GD7BG,AC6BCyC,CAAAA,KAAK,CAAC,CAAA,EAAG,CAAC,CAAK,CAAA,GAAA,GAAA;ED5B7BnG,AuBtLA,GtBmNS,CD7BL,EAAE,CuBtLC+5B,EtBmNE,KD7BK,AuBtLPA,CAAQqB,GAAG,CAAC1D,OAAAA,CAAAA;AACrB,EvBsLEz3B,IC6BIiC,GD7BG,CC6BHA,CD7BK,AC6BA4H,IAAI,CAACpG,GD7BG,AC6BHA,CAAAA;AsBjNhB,EvBqLExD,IC6BIwD,CD7BC,EAAE,AC6BG,AsBlNHk3B,GtBkNG,EAAA,GD7BK,YuBrLa3yB,CAAAA,MAAM,EAAE0yB,UAAU,EAAE;EvBsLhDx6B,AuBrLA,IAAI,CAACw6B,MvBqLM,EAAE,EuBrLI,EAAA,IvBqLI;EACrBv6B,AC6BA,ED7BE,AuBrLA,EvBqLE,QAAQ;EACZC,AC6BA,OAAO6B,CD7BC,EAAE,CC6BHA,OD7BW;AC8BpB,ED7BE5B,AuBrLA,IAAIkI,CvBqLC,EAAE,IuBrLHA,GAAUP,CvBqLC,KuBrLDA,CAAOO,OAAO;AtBoN9B,ED9BEjI,AuBrLA,IAAI,CAACiI,EtBmNEuB,ED9BE,EAAE,CuBrLG,EAAA,KvBqLK,GC8BZA,CAAgB1B,GAAW,EAAE;ED7BpC7H,AC8BA,EsBnNEyH,GvBqLG,CC8BC/F,CD9BC,CuBrLL+F,CAAOO,CtBmNHtG,GAAOwH,ED9BE,CuBrLC,GAAGixB,GtBmNItyB,CAAAA,GAAAA,CAAAA,EsBnNJsyB;EvBsLnBl6B,AC8BA,EsBnNE,KtBmNK+D,ED9BE,CC8BK,CD9BH,GC8BG,KD9BK;EACnB9D,EC8BE,GD9BG,EAAE,AC8BA,MAAM7K,CAAAA,CD9BE,GC8BGqM,IAAM,EAAA;ED7BxBvB,AuBrLA,ItBmNI,AsBnNA6H,GvBqLG,CC8BC3S,CD9BC,AC8BDA,EsBnNJ2S,CAAQsyB,EtBmNE,EAAI,CD9BD,CC8BC,CsBnNC,EAAE;EvBsLrBl6B,EuBnLEqH,GvBmLG,CCgCC,CDhCC,CuBnLEO,CAAAA,MvBmLM,CuBnLC,GAAGA,OAAUrG,GAAAA,MAAAA,CAAO0B,MAAM,CAAC,CAAA,CAAA,EAAI2E,OAAS,EAAA;EvBoLxD3H,IuBpLyDi6B,EvBoLnD,EAAE,GuBpLiDA,EAAS,GvBoLlD,EuBpLuD;EvBqLvEh6B,ICgCI0D,AsBrNqEw2B,CvBqLpE,EAAE,ACgCGx2B,GAAAA,GAAAA,EDhCK,AuBrL0Dw2B,EtBqNxDx2B,AsBrNqE,CAAA,EtBqNlE,CAAC3O,CAAE,CAAA;ED/BvBkL,ECgCE,AsBtNsF,CvBsLrF,AuBtLqF,CAAA,CvBsLnF,QAAQ;EACbC,ECgCE,EDhCE,EAAE,GCgCGwD,GAAAA,EDhCK;EACdvD,ACgCA,AsBtNA,CtBsNA,GDhCI,EAAE,CuBtLCuH,OvBsLO,AuBtLPA;AtBuNT,AsBtNA,EvBsLEtH,IAAI,EAAE,QAAQ;ACkCT,AuB9WP,ExB6UEC,OCiCc6I,AuB9WPqxB,CxB6UC,EAAE,MAAM,AwB7UTA,CAAUld,KAAK,CvB8WRnU,CAAiBxF,AuB9WP82B,GvB8WqB,EAAEjzB,GAAW,EAAO,KuB9W1B,EAAE;ExB8UzCjH,ACiCA,AuB9WA,MxB6UM,ACiCA6I,AuB9WAoZ,ExB6UE,EwB7UKlF,GAAAA,CvB8WPlU,EDjCU,CCiCCV,CuB9WJ4U,IAASA,KAAM3V,CAAAA,CvB8WC,CAACH,GAAI,CAAA,CuB9WC,IvB8WIkB,AuB9WA,CAAA,CAAC,UvB8WW,CAAClB,GAAAA,CAAI,GAAG0B,eAAAA,CAAgB1B,GAAG,CAAA,CAAA;EDhC9EhH,ACiCA,AuB9WA,GxB6UG,EAAE,CwB7UCkG,CvB8WC0C,MDjCM,AwB7UP1C,EvB8WU/C,CAAAA,AuB9WA6e,GvB8WA7e,CAAAA,AuB9WA6e,CAAK9b,OAAO;AvB+W9B,EDjCEjG,AwB7UA,GxB6UG,EAAE,CwB7UChO,GAAAA,ExB6UK,CwB7UC+vB,IAAK/vB,CAAAA,GAAG,KAAKkC,SAAAA,GAAY8lC,eAAAA,GAAkB,CAAC;AvBgX1D,EDlCE/5B,AwB7UA,KxB6UK,CwB7UClO,CxB6UC,EwB7UDA,GAAMgwB,GxB6UG,CwB7UEhwB,CAAAA,GAAG,KAAKmC,SAAAA,GAAY8lC,eAAAA,GAAkB,CAAC;ExB8UxD95B,AwB7UA,MxB6UM,CwB7UC,CxB6UC,QAAQ;ACmCjB,EDlCCC,EAAE,AwB7UAuM,ExB6UE,GwB7UKzG,EAAAA,GxB6UG,IwB7UHA,GAAUlU,GAAAA,GAAMC,GAAG;AvBgXvB,EDlCLoO,EwB7UEuM,GxB6UG,AwB7UE1G,ExB6UA,ACkCO2C,AuB/WP3C,OAAAA,CxB6UQ,EwB7UEjU,CvB+WS4B,CAAAA,CuB/WT5B,EvB+WoB,CuB/WdD,CvB+WgB;EDjCvCsO,ACkCA,AuB/WA,CAAA,ExB6UG,EAAE,ECkCEzM,GAAAA,CAAI+O,EDlCE,ICkCI,CAAC,CAAA,CAAA,CAAGkG,WAAW,CAAA,CAAKjV,GAAAA,GAAAA,CAAIiR,KAAK,CAAC,CAAA,CAAA;AACjD,AuB/WA,ExB6UEvE,IAAI,EAAE,QAAQ;AwB3UhB,ExB4UEC,ICoCWuI,GuBhXJmxB,ExB4UE,EAAE,ACoCU,GAACx1B,IuBhXfw1B,CxB4UY,ACoCsB,AuBhXtBvoB,IvBgXsB,EuBhXhB,EAAEC,GvBgXqBlN,GuBhXf,EvBgXeA,AuBhXbu1B,KvBgXuB,UuBhXR,CvBgXQ,CuBhXN;AvBgXkB,EDnCtEx5B,AwB5UA,ExB4UE,EAAE,AwB5UAw5B,CvB+WkE,CAAA,CAAA,GAAA,EDnC1D,KCmC0D,EuB/WlEA,KAAoB,KAAK,EAAE;ExB6U/Bv5B,EwB5UE,EvBgXSsI,CDpCN,EAAE,EwB5UE,KvBgXe,AuBhXV,GvBgXWtE,KAAqD,IAAA,OAAOA,KAAAA,KAAU,UAAA;ADnCjG,ACqCA,CDrCC;AACD,ACoCA,EuBhXE,KvBgXF,CAAA,AuBhXQzO,CxB4UC0K,AwB5UD1K,CvBgXR,EuBhXY+jC,CvBgXZ,EDpCer5B,CAAA,EAAG,GwB5UNq5B,CAAUroB,CvBgXtB,KuBhX8BsoB,EAAAA,eAAAA,CAAAA;AvBiXjBhxB,EDpCX,AwB5UA,IvBgXWA,EDpCLrI,AwB5UAwH,CAAAA,GAAI4xB,GvBgXC/wB,CDpCG,ECoCS,CDpCN,ACoCUlW,CDpCT,ACoCSA,CDpCR,AwB5UTinC,CvBgX4BhnC,AuBhXlB4e,CvBgXgC,KAAA,AuBhXxBqoB,EAAAA,eAAAA,CAAAA;ExB6U5B,ACoCA,AuB/WA,IvB+WIlnC,CAAEmW,CDpCArI,ACoCAqI,CuB/WC,GxB2UG,ACoCA,GDpCGpI,ECoCE9N,CAAAA,CAAEkW,EDpCE,CAACrI,CCoCC,EAAE,CDpCC,CAACvJ,OAAO,CAAC;EACjC,ECoCE,AuB/WA4e,GAAAA,CxB2UInV,CwB3UCqH,CAAAA,CvB+WE,AuB/WAwE,ExB2UE,CwB3UC,ExB2UE9L,ACoCA,MDpCM,CAACD,IAAI,CAACzL,GAAG,CAAC;EAC9B,EwB3UEqb,ExB2UE5b,CAAC,EAAEmM,AwB3ULyP,CxB2UM,CwB3UCxa,CxB2UCzB,AwB3UDyB,CxB2UE,AwB3UA2W,ExB2UE3L,CwB3UC,CxB2UC,EAAEC,EAAE;EACnB,ACqCA,EuBhXEiV,GxB2UGthB,ACqCA,CDrCC,EwB3UJshB,CxB2UO,CAAC,AwB3UA/N,CvBgXCe,AuBhXDf,CxB2UEvT,AwB3UA8X,CxB2UC,ECqCFxD,CDrCKtI,CwB3UC,EvBgXE9N,CDrCC,ACqCE,CDrCDgB,CCqCC,KDrCK,EAAEc,CAAC,EAAE,EAAE;IAChCoM,ACqCA,AuBhXAuP,ExB2UE,ECqCE,AuBhXJA,CxB2UKtP,ACqCAlO,CAAAA,AuBhXCiD,CxB2UC,ACqCAmT,AuBhXDnT,CAAE0W,ExB2UE9L,ACqCA,CAACsI,GDrCG,CAACtU,ACqCG,CDrCF,ACqCE,CDrCD,CCqCC;EuB/WpB,CAAA,CxB2UE,ECqCE,GDrCGmM,CAAC,GAAG,ACqCA,CDrCC,EAAEA,CAAC,CCqCC,EDrCED,KAAK,CAAChN,MAAM,EAAEiN,CAAC,EAAE,EAAE;AwB1UvC,MxB2UMxM,CAAC,GAAGuM,KAAK,CAACC,CAAC,CAAC;AwBzUlB,EvB+WE,IDrCIE,EAAE,CwB1UCi5B,ExB0UEj5B,EAAE,CAACC,CwB1ULg5B,CAAOz1B,KxB0UK,AwB1UA,CxB0UClQ,CAAC,AwB1UA,ExB0UEY,GAAG,CAACZ,CAAC,CAAC,CAAC;ECuC9B,AuBhXA,ExB0UE,EwB1UE0N,CAAAA,EvBgXG,AuBhXAxO,CAAAA,EAAGV,CvBgXC,AuBhXEnB,EAAAA,CAAAA;AvBiXf,CAAA,CuB/WE,ExByUE2C,CAAC,CwBzUCuQ,ExByUE3D,EwBzUF2D,MxByUU,CAACzN,OAAO,CAAC2J,EAAE,AwBzUrB8D,CxByUsB,CwBzUbL,CxByUe,EAAE,CAAC,CwBzUV,CAAA,EAAA;AvBiXvB,IDvCI9D,AwBzUAsB,CAAAA,GAAIwC,IxByUI,CAACxD,AwBzULwD,CAAMwR,CxByUC,CAAC,CwBzUC,ExByUE,CAAC1hB,CAAC,IAAI,EAAE,GAAG,IAAI,EAAEA,CAAC,IAAI,CAAC,GAAG,IAAI,EAAEA,CAAC,GAAG,IAAI,CAAC;EAC1D,EwBzUEd,CAAAA,GAAIgR,KAAAA,CAAM+L,KAAK;ExB0UjB,EwBzUEzd,CAAAA,GAAI0R,CxByUC9D,IwBzUD8D,CAAMyR,GxByUG,GwBzUG;AxB0UpB,ACuCC,IuBhXGtkB,CAAAA,GAAI6S,KAAAA,CAAM8L,IAAI;AxB2UlB,ACkCA,GuB5WS,CxB0ULnP,GCkCJ,CAAA,CDlCS,AwB1UA,CvB4WT,GAAA,SAAA;ADjCA,ACqCO,IuB/WHa,CAAIxO,GAAAA,CxB0UC4N,ACqCO+H,AuB/WR3V,GAAIV,CAAAA,GAAInB,CAAI6S,CxB0UFpD,CAACzN,CwB1UC6Q,ExB0UE,ACqCQvR,CAAAA,CDrCN,ACqCmB,CuB/WvBuR,CvB+WyB;EDpC3C,ACqCA,IDrCI,CAACrD,ECqCElO,CAAAA,CAAE4P,CDrCC,EAAE,CCqCC,KAAK,SAAa5P,IAAAA,CAAAA,CAAE4P,IAAI,KAAK,OAAA,IAAW5P,CAAE4P,CAAAA,IAAI,KAAK,aAAA;AAClE,EuB9WE,ExByUE1B,KAAK,AwBzUA,GxByUGV,MAAM,CAAC,CAAC;IAChBU,AwBzUA6U,GAAKhU,ExByUA,AwBzUAA,CxByUCX,AwBzUDW,WxByUY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AExXpC,EFyXE,EwBzUEuO,KAAO/c,EAAAA,CAAAA;ExB0UT,EwBzUEyiB,IxByUIpjB,CAAC,CwBzUGC,ExByUAqO,AwBzUArO,CAAAA,IxByUK,CAACa,GAAG,CAAC2N,WAAW,CAAC,CAAC,CAAC;EAClC,EwBzUEgP,IAAM3e,CxByUDkB,CAAC,AwBzUAlB,CAAAA,GxByUI;AExXb,IFyXG6B,AwBzUA0mC,CxByUC,EAAErnC,CAAC,CAAC,CAAC,CAAC,CwBzUPqnC,EAAU11B,KAAAA,KAAU;AtB9CjB,EsB+CL,CAAA,CxByUE/Q,CAAC,CExXQ2V,CFwXNvW,CAAC,AExXUhB,CFwXT,CAAC,CAAC,AExXOA,IAAAA,CAAKuX,EAAAA;AAAG,AsBgD1B,IxByUItW,CAAC,EAAED,AEzXmB,CFyXlB,AEzXkB,CFyXjB,AEzXiB,CFyXhB,CAAC,CEzXe,EAAA;AACnB,AsBiDP,IxBwUIA,CAAC,CEzXQwW,CFyXNxW,CAAC,CAACgB,AEzXU,AsBiDVsmC,GtBjDU,CAAA,EFyXJ,CEzXQ/wB,EAAAA,EFyXH,CAAC,GAAGvW,CAAC,CAAC,CAAC,CAAC,GAAG,CwBxUEukB,CAAAA,KAAK,EAAEgjB,aAAa,EAAE;AtBjD7B,EF0XxB,AwBxUA,CxBwUC,IE1XuB,CAAA,AsBkDlBz5B,CtBlDkB,GAAA,AsBkDlBA,GtBlDkB,AsBkDX,EAAE;AxByUjB,AE1XO,EsBkDL,ItBlDW2I,EsBkDL+wB,GtBlDahxB,GAAAA,EsBkDbgxB,CtBlDahxB,EsBkDF+N,CtBlDQhO,EAAAA,EsBkDFkxB,CAAAA,sBAAsB,CAACF,aAAAA,CAAAA;AxB0UhD,AE5X8B,EsBmD5B,IxByUI74B,AwBzUA5M,CtBnDwB,AsBmDrByR,CtBnDqB,CsBmDrBA,CtBnDqB,EF4XlB,CE5XkB,AsBmDrBA,ExByUM,GE5Xe,mGF4XuF;AACrH,AE5XamD,EsBoDX,ItBpDWA,CsBoDN5U,CAAAA,CxBwUE6M,EwBxUE,CAAA,EtBpDE+H,AsBoDCnD,GxBwUG5E,AE5XOuD,CF4XNpR,AwBxUG0mC,GxBwUA,AwBxUAA,ExBwUE,AE5XQ7wB,CAAAA,KsBoDV6wB,CAASxmC,MAAM,EAAEc,CAAAA,EtBpDP6U,CsBoDWpD,IAAM,EAAA,EAAEzR,CAAG,EAAA;AtBpDJ,EF6X/C,EwBxUEgM,GtBrD6C,CF6XzCnL,AE7XyC,AsBqD7CmL,CxBwUK,AwBxUA4H,CtBrDwC,EF6XrChH,CE7XqC,AsBqDpC,CAAC84B,IxBwUI,CAAC5kC,EE7X8B,CsBqD3B,CxBwUC,AwBxUAd,CxBwUChB,AwBxUDgB,CAAE,CAAC6R,CxBwUC,CAAC,GwBxUG,CAAA;AtBpDxB,EF6XL,AwBxUA,IxBwUI3T,AE7XO4W,CF6XN,GAAG,GAAG,IE7XcL,GAAAA,EAAAA,GAAK,GAAA;AAAI,EF8XlC,AwBxUA,IxBwUI5V,CAAC,AE9X6B,CAAA,CF8X3BC,AwBxUAkN,CxBwUC,AE9X0B,EF8XxB7N,CAAC,AE9XuB,AsBsD3B6N,WtBtD2B;AAC7B,AsBsDP,ExBwUE,IAAI,AE9XO+I,CF8XNlU,CAAC,EAAE,GE9Xa4T,GAAAA,EAAAA,GAAK,CAAA;AAAE,AsBwD9B,IxBuUI,GE/X0B,CAAA,CAAA,AsBwDrBmxB,GtBxDqB,OAAA,AsBwDrBA,CAAWC,KAAK,EAAEh2B,KAAK,EAAEi2B,OAAO,EAAExzB,OAAAA,GAAU,CAAA,CAAE,EAAE;AtBvDlD,EF+XL,AwBvUA,ItBxDW0C,EsBwDLhJ,IAAAA,GAAO65B,CtBxDWpxB,GAAAA,CsBwDXoxB,CtBxDWpxB,AsBwDLzI,GtBxDU,CAAA,AsBwDN;AtBxDQ,EFgY/B,AwBvUA,IxBuUInL,CAAC,AEhY0B,CFgYzB,AEhYyB,AsByDzBklC,CxBuUC,CAAC,AEhYuB,GAAA,EFgYlBlnC,CAAC,EAAE,AwBvUVknC,GAAazzB,EtBzDY,KsByDJkV,CAAAA,IAAI,KAAK,QAAA;AtBxDzBvS,EsByDX,ExBuUE,EEhYSA,AsByDPjV,CAAAA,EAAGyR,CxBuUC3U,CAAC,EwBvUF2U,CxBuUK,CAAC5Q,AwBvUA+Q,CxBuUC,CAAC,CAAC,CAAC,AEhYNqD,GAAgBR,EAAK,GAAA,AsByDLuxB,CtBzDK,CsByDLA,EtBzDS,CAAA,OsByDTA;AtBzDW,EsB2DtC,ExBsUE9nC,CAAC,CwBtUC2R,CtB3DkC,CFiYhChP,AEjYgC,CFiY/B,CAAC,AEjY8B,CFiY7B,AwBtULgP,CxBsUM,CEjY4B,EFiYzBvS,CwBtUC,ExBsUE,CAACR,CAAC,AwBtUA,CxBsUC,CwBtUC,ExBsUEC,EEjYgB,CFiYb,CAACD,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;AE/X/BoY,EFgYX,EwBtUE,EtB1DSA,KAAAA,GAAQhY,IAAKgY,CAAAA,KAAAA;AAAM,EFiY9BrW,CAAC,GAAG,CAACgC,AEjYyB,CFiYxB,AEjYwB,CFiYvB,CAAC,AEjYsB,CFiYrB,EEjYqB,KAAA;AACnBsU,EFiYXrW,AwBrUA,CxBqUC,GAAG,AEjYOqW,CFiYNtU,AwBrUAb,CxBqUC,AwBrUDA,CxBqUE,CAAC,AEjYGmV,CFiYF,AwBrUA,CAAA,CtB5DSjY,CsB4DNuU,GtB5DW0D,CAAAA,AsB4DJnJ,GAAAA,CtB5DImJ,GsB4DJnJ,CAAK9M,MAAM,EAAEc,CAAAA,GAAIyR,IAAM,EAAA,EAAEzR,CAAG,EAAA;AtB5DnB,EFkY5B7B,CAAC,CwBrUCyT,ExBqUE,CAAC/Q,AElYuB,CFkYtB,AElYsB,CFkYrB,AElYqB,CFkYpB,CAAC,CElYmB,IAAA,AsB6DX,GAAA,CAACmL,IAAI,CAAChM,CAAE,CAAA;AtB3DpB,EFiYLnB,CAAC,CwBrUC,ExBqUE,EwBrUE+S,CxBqUC,AEjYOwD,IFiYHvU,CAAC,CAAC,CAAC,CAAC,GAAGvD,AwBrUZsU,CtB5DqBxQ,CAAAA,CFiYN,AEjYe,CFiYdvC,CAAC,AEjYe0U,AsB4DfuyB,CxBqUC,AEjYuB,EAAEzwB,CFiYtBtY,GAAG,AwBrUE,CxBqUD8B,CAAC,AwBrUA,CtB5DgC,CFiY9B,CAAC,AEjY+B,EFiY7B,GAAG,CAAC,CAAC;EAC1CC,AEjYA,CFiYC,GAAG,AwBrUA,GxBqUG,AEjYA5B,CsB4DCoV,GxBqUGzR,AEjYCyU,CFiYA,AEjYAA,CFiYC,CAAC,CAAC,AEjYA,AsB4DPhD,CtB5DQl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yUGxE,CwBzUGkF,EAAAA,CxByUC,CAAC1U,CwBzUF0U,ExByUK,CAAChF,IAAI,CAACtO,CAAC,CAAC,CAAC;AEnY5B,EFoYC,AwBzUA,KAAKmB,CxByUClB,AwBzUDkB,CxByUE,EwBzUE,CxByUCiN,AwBzUD,EAAGwE,ExByUE,CAAChU,CwBzUIuO,ExByUD,CAACmB,AwBzUAnB,IxByUI,AwBzUJA,CxByUKlN,AwBzUAI,CxByUC,CAAC,CAAC,GwBzUG,EAAEc,CAAAA,GAAIyR,IAAM,EAAA,EAAEzR,CAAG,EAAA;AtB1D1C,EFoYL,EwBzUEmS,GAAMnG,CxByUF7N,CAAC,AEpYO0X,CsB2DN7J,ExByUEiB,EwBzUE,CAACjN,CxByUC,AwBzUC,CxByUAvC,AwBzUA,EtB3DUoS,CFoYP,AEpYOA,CFoYN1C,IAAI,AEpYe,CFoYdhP,CAAC,AEpYe,CFoYd,CAAC;EAC3B,AEpYA,EsB2DE+nC,ItB3DIpwB,CFoYC,AwBzUA,CAAC9V,CAAAA,CAAE,EtB3DJ8V,CsB2DO,EtB3DY,EAAE;EAC3B,EFoYEjX,CAAC,CwBzUCuC,CxByUC5D,AwBzUE2U,CtB3DD4D,CsB2DC5D,CxByUC,CAACpF,CEpYHgJ,AsB2DC5D,CxByUI,CAACtT,CAAC,AEpYA3B,GFoYGmQ,CAAC,AEpYC0I,CAAAA,GFoYG9I,CEpYC,CAAC4C,EFoYE,CAACpS,EEpYHoS,CFoYM,AEpYNA,CFoYOzC,IAAI,CAACvO,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;EEnY7C,EFoYEC,CAAC,CEpYCkB,AsB2DAuT,CxByUC/V,AEpYDwC,AsB2DGipB,EAAAA,CxByUC,CAAClc,EAAE,AwBzUA,CxByUCjO,AwBzUAqT,CxByUC,EwBzUG,CxByUA9E,CAAC,IAAIJ,IAAI,CAACxP,GAAG,CAAC2P,IAAI,CAACtO,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;EElY7C,EFmYEX,AwBzUA,CxByUC,AwBzUD,ExByUGX,AEnYAwC,CAAI,EFmYD,CAAC+M,AEnYA,CAAA,CFmYE,CAAC5O,AEnYA6B,CFmYC,AEnYG+V,GFmYA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qa,CAAMtL,ItBrD9BtH,GFiYFzH,AEjYEyH,CFiYDxH,KAAK,AwB5UuC,CtBrD3CwH,AsBqD2C,CxB4UrC,AwB5UqC,GtBrD/BjU,CAAO,IAACiV,OAAAA,GAAUhB,OAAYjU,IAAAA,CAAAA;AAC/D,EFiYE,AwB5UA,IxB4UItE,CAAC,EwB5UE,CxB4UC;AE/XV,IF+XW+B,AwB3UPzB,CxB2UQ,EAAE,AwB3ULqf,CxB2UM,CwB3UNA,UAAAA,GAAarf,GAAMgT,GAAAA,MAAAA,CAAOo2B,iBAAiB;IxB2UnC1nC,AwB1Ub3B,CxB0Uc,EAAE,AwB1UXuf,CxB0UY,CwB1UZA,UAAAA,GAAavf,GAAMiT,GAAAA,MAAAA,CAAOyE;EACjC,CAAA,CxByUqB1W,CAAC,EAAE,CAAC;AE5XpB,AsBoDP,IxBwU6BD,CAAC,EAAE,EE5XhBoY,kBACdC,CAAAA,KAA+B,EAC/BxE,MAAoC,EACpCyE,QAAgB,EAChB;AsBkDF,ExBsUmC,AEvXjC,CFuXkC,GEvX9BxW,CAAAA,EAAWyR,AsBiDRg1B,ItBjDsB52B,EAAAA,KAAAA,KsBiDtB42B,CAAiBC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE;ExBuUtD,AEtXA,AsBgDA,IxBsUIvmC,CEtXCL,CAAAA,AsBgDC6mC,GxBsUG,AEtXA,CFsXCvmC,AEtXD,EAAGmR,EsBgDNo1B,EtBhDatwB,CFsXF,AwBtUAmwB,CxBsUC74B,CEtXC0I,IFsXI,AwBtUA,CxBsUC,AEtXLA,AsBgDKowB,CtBhDCznC,CFsXC,KEtXK,CsBgDE,CtBhDAc,AsBgDA,CtBhDAA,GAAIyR,CsBgDCi1B,GtBhDDj1B,EAAMzR,CAAK,AsBgDJ,CAAC2mC,CtBhDG,EAAA,KsBgDHA,CAAS,GAAG,CAAA,CAAC,CAAA;EAC1D,ExBsUE,AEtXA92B,IFsXIhC,CEtXJgC,AsBgDKg3B,GtBhDGtwB,CFsXC,CAACrX,GEtXG,AsBgDA,CtBhDCc,AsBgDA4mC,CtBhDE,CFsXA,AEtXA,CAACpwB,GFsXG,CAAC,EAAE,CwBtUTowB,CtBhDY,AsBgDD,CtBhDC,IsBgDIC,QAAQ,CAACD,UAAAA,CAAW,GAAG,CAAA,CAAC,CAAA;AAC1D,ItBhDI,EFsXE9pC,CAAC,CEtXC,CAACqZ,CFsXC,IEtXDA,CAAMtG,KAAQ,CAAA,EAAA;AsBkDvB,MtBjDMkC,EFqXKlT,CAAC,AwBpUHioC,ExBoUKj5B,CErXRkE,CAAO3U,GFqXM,AErXH,CFqXI,CAAC,CAAC,AErXHF,IAAAA,CAAKE,GAAG,CAAC2U,AsBiDnB+0B,CAAoBjB,KtBjDD9zB,AsBiDM,CtBjDC3U,CsBiDC2pC,EtBjDE,EAAEl3B,EsBiDE,EAAEm3B,CtBjDJn3B,CAAAA,MsBiDY,EAAE3B,IAAI,EAAE;EAC1D,ItBjDI6D,CsBiDC,CxBmUiBjT,CAAC,EAAE+O,CEpXrBkE,CAAO5U,AsBiDA6e,GxBmUmB,AEpXhB,CFoXiB,AwBnUZ+qB,CxBmUa,CAAC,AEpXhB7pC,EsBiDE6pC,EtBjDF7pC,CAAKC,GAAG,AsBiDN4pC,CtBjDOh1B,AsBiDAk1B,MtBjDAl1B,CAAO5U,GAAG,EAAE0S,KAAAA,CAAAA,KsBiDW,CAAC3B,IAAAA,CAAAA,CAAMmD,OAAO,CAAA,CAAI,EAAA;IACjE,IxBkUiClT,CAAC,CwBlU5B0R,CxBkU8BhC,IwBlUtBg4B,CxBkU2B,CAAC,CAAC,AwBlU7BA,CxBkU8B,IwBlUzB,CAAC7pB,IAAAA,CAAKnK,KAAK,CAAC;EtBhDjC,EsBiDE,IxBiU8C3T,AwBjU1C,CxBiU2C,EAAE,KwBjUhC2R,IAAAA,KAAAA,GAAQ,CAAA,IAAO,CAACm3B,QAAAA,IAAYn3B,KAAAA,GAAQ,CAAI,EAAA;AtBhD7D,MFiXwD,AwBhUlD,CxBgUmD,MwBhU5CmM,IAAAA,CAAKnK,KAAK;AtB/ChB,MFgXD,GEhXU4E,CFgXN5I,KAAK,CAAC3O,EEhXUwX,CAAAA,GFgXJ,GAAG,CAAC,AEhXe,EFgXb,AEhXe;EACzC,AsBgDA,MxBgUM5Z,CAAC,AEhXA4Z,CFgXCxY,CAAC,GAAGV,EEhXLkZ,CFgXQ,CAAC7I,EEhXE4G,EAAAA,CFgXG,CAAC,CAAC,AEhXA,CFgXC,CAAC,CEhXA,CAAA;AAC3B,EsBiDE,IxB+TI,GwB/TG,IAAI;AtB/CN,AsBgDP,IxB+TI,KE/WYkC,SAAUC,CAAAA,OAAe,EAAE;AsBkD3C,ExB8TE,AE/WA,CF+WC,MAAM,AE/WAA,AsBiDAswB,OtBjDAtwB,IAAW,CsBiDEuwB,CAAAA,CtBjDF,GAAM1yB,EAAC,CAAA,GsBiDK,EAAEugB,MAAM,EAAE;AtBhD1C,EsBiDE,ExB8TEl4B,CAAC,GAAG2Q,AwB9TA,KxB8TK,CAACI,KAAK,EAAE;AE7WrB,IsB+CS4U,ExB8Ta5jB,CAAC,EAAE,AwB9TX,CxB8TY;IwB9TVuoC,ExB8TYtoC,CAAC,EAAE,CAAC,KwB9THkd,EAAAA;EAAAA,CAAK,GxB8TA7d,AwB9TGgpC,CxB8TF,EAAE,CAAC,MwB9TDA;EACnC,IxB6TsCjpC,CAAC,CwB7TjCwoC,CxB6TmC,KwB7TnCA,GAASjkB,KAAM4kB,CAAAA,OAAO,KAAK5kB,KAAM4kB,CAAAA,OAAO,GAAG,CAAA,CAAC,CAAA;EAClD,ExB4T0C,CAAC,CAAC,EwB5TtC;IxB6TJvqC,AwB7TKwf,CxB6TJ,CAACpe,CAAC,GAAGV,AwB7TD8e,GxB6TI,CAACxf,CAAC,CAACoB,CAAC,CAAC;AExWjB,EFyWC,EwB9Te6oC,MAAAA;AtB1CV,EFyWL,EwB/TuBl1B,KxB+ThB/U,AEzWO+Z,AsB0CgBjF,CxB+TtB,CwB/TsBA,YtB1CDxQ,CAAAA,CAAS,EAAE;AF0W1C,EEzWE,AsByC8BwQ,CAAa,GtBzCvC,AsByC0CoK,CtBzCzClF,GsByCyCkF,WtBzCzClF,CAAe1V,CAAI,CAAA,EAAA;AF0W1B,EwBhUE,EtBzCE,IsByCIkmC,CxBgUCx5B,IwBhUDw5B,GAAQhrB,MxBgUMxO,AwBhUNwO,CxBgUOtd,AwBhUAwd,GxBgUG,CwBhUC,CxBgUC;EAC1B,AwBhUA,IxBgUIxd,EwBhUEuoC,CxBgUC,CAACx5B,GwBhUFw5B,GxBgUQ,AwBhUAR,CxBgUC,CAAC,CAAC,GwBhUHA,CAAOvqB,CxBgUC,GAAG,AwBhUA,ExBgUE;EExW3B,AsByCA,ExBgUE,EEzWEle,CAAI,CsByCF6T,EtBzCE,CFyWCtF,AEzWD,AsByCFsF,GAAMk0B,KxBgUK,CAACrnC,GAAG,CAAC,CwBhUEsd,CAAAA,MAAAA,EAAQyqB,MAAQ/qB,EAAAA,IAAAA,CAAAA;ExBiUxC,AEzWA,AsByCA,ItBzCInN,CAAI,CsByCF4C,EtBzCE,CAAA,CsByCFA,GAAOujB,MAAAA,CAAO91B,MAAM;ExBiU1B,AEzWA,AsByCA,IAAI2mC,GxBgUGjlC,AEzWA1D,EsByCH2oC,EtBzCG3oC,CAAKL,GFyWG,CAACmC,CEzWC,CAACoC,CFyWC,AEzWG9C,CFyWF,EEzWEA,CAAAA,CAAAA,GAAKA,CAAAA,KAAM8C,CAAG,EAAA;AF0WtC,EwB/TE,EtB1CE9C,CAAK,EsB0CF,EtB1CE,EAAA,AsB0CE0B,CAAI,GAAA,CAAA,EAAGA,CAAIyR,GAAAA,IAAAA,EAAM,EAAEzR,CAAG,EAAA;AxBgUjC,IEzWI6O,AsB0CA,CtB1CAA,CFyWEb,CEzWFa,GsB0CMyF,CxB+TC,CAAC,EwB/TFA,GAAO0gB,MAAM,CAACh1B,CAAE,CAAA;ExBgUxBiO,AEzWA,EsB0CE,MAAM,GxB+TGA,CAACJ,KAAK,EAAE;EExWnB,EFyWE,EwBhUO,CAACy5B,CxBgUJz5B,CEzWCgB,CAAAA,EsByCGy4B,CxBgUC,EwBhUOz1B,KAAAA,KxBgUK7D,KAAK,EAAE;AExWhC,MFyWM,AwBjUqB,CAACu5B,KAAM,CxBiUrB15B,EwBjUuBgC,GxBiUlB;AEvWlB,IFwWI,AwBlUqC,CAAC,GAAGyE,IAAAA;AtBrCtC,IFwWH,AwBlUA,KtBtCYyC,CFwWN7I,AwBlUAs5B,IxBkUI,GAAG,GwBlUPA,GAAalzB,CxBkUCzG,EExWRkJ,CACdC,AsBqCqB1C,CAAK+yB,CxBkUC,MwBlUM,GtBrCf,EAClBpwB,AsBoCsC3C,IAAK+yB,CAAAA,KtBpC1B,EACjB,AsBmCkD,GAAG,CAAA,CAAC,CAAA;EtBlCtD,EFqWE,AwBlUAxB,IxBkUI/oC,AErWAoa,CFqWC,AwBlUL2uB,GAAQ2B,UAAU,CAACD,ItBnCOtwB,CsBmCPswB,CAAM,CtBnCCtwB,EsBmCEwvB,QtBnCFxvB,CAAW7V,CAAC,GAAG4V,GsBmCbyvB,CAAiBC,MAAAA,CtBnCJ1vB,CAAY5V,AsBmCA+Q,CtBnCC,EsBmCIN,EAAAA,KAAAA,CAAAA;EtBlC5D,EFqWE,AwBlUAg0B,IxBkUI33B,AErWAiJ,CsBmCC,CAACvF,ExBkUE,KAAK,KwBlUPA,CAAa,ExBkUE,CwBlUC/B,CxBkUC,AErWGoH,GAAAA,CsBmCJpH,StBnCIoH,CAAW1D,CAAC,GAAGyD,WAAAA,CAAYzD,CAAC;EACxD,EsBoCEsyB,ExBiUE/oC,CAAC,CErWCsa,CsBoCEqwB,CxBiUA75B,AwBjUA65B,IAAI,GAAGX,GxBiUG,CAACj5B,KAAK,CAAC,KErWnBuJ,GAA2Bla,CsBoCE2oC,CAAAA,EtBpCG9vB,CAAAA,EsBoCH8vB,EtBpCO,AsBoCAkB,CtBpCC7vB,KsBoCD6vB,EAAQ,IAAI,EAAE/qB,IAAAA,CAAK9N,CtBpClBgJ,GAAsBA,AsBoCA,CAAA,kBtBpCAA,GAAsBC,mBAAsBA,GAAAA,mBAAAA,CAAAA;EAE7G,EFoWE,AwBjUA0uB,CxBiUC,CEpWCxuB,GsBmCIqwB,CAAAA,CxBiUC,AEpWGxqC,GAAAA,CFoWCgR,EwBjUE,CtBnCHhR,CFoWK,AEpWAoa,CsBmCCwvB,IxBiUI,AEpWA,CAAC3vB,OFoWO,EAAE,KwBjUM0uB,CAAAA,ItBnCM3uB,CsBmCN2uB,CtBnCM3uB,CsBmCC6vB,MAAAA,EAAQ,KAAK,EAAE/qB,GtBnChB9E,CAAAA,AsBmCgB8E,CAAK9N,IAAI,CAAA;EtBjCrE,EsBmCE,ExBgUEpR,AEnWAua,CFmWC,GAAGtY,AwBhUA4oC,CtBnCJtwB,GAAS,CAAC,GFmWE,AEnWF,CFmWGxJ,EEnWG4G,CsBmCZkzB,CtBnCiB,CFmWH,CAAC,AEnWE,AsBmCF9B,IxBgUIp5B,CwBhUJo5B,CAAM+B,OxBgUO,CAAC/5B,KAAK,AwBhUA,CxBgUC,IAAIC,AwBhUA+3B,KAAM+B,CAAAA,OxBgUO,CAAC/5B,KAAK,AwBhUA,CxBgUC,EwBhUE,CAAA,CAAC,CAAA;IxBiUpE,AEnWAwJ,AsBmCAswB,KtBnCAtwB,IAAS3C,GAAAA,AsBmCG,CtBnCHA,AsBmCI9C,CtBnCJ8C,WsBmCI9C,CAAa,GAAG/B,KAAAA;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koB,IAAM,EAAA,SAAA;ExB4TRjZ,EwB3TEL,CxB2TCK,CAACC,EwB3TI,EAAA,CxB2TC,EAAEC,MAAM,EAAE;EwB1TnB,CAAA,CxB2TE,AwB3TF,IxB2TMD,KAAK,EAAE;AE9VR,AsBoCP,MxB2TM,GE/VUqJ,GF+VJnJ,EAAE,GAAG,IAAI,CAAC3O,AE/VN8X,CAAcR,EF+VL,GE/VkB,EAAES,KAAa,EAAEC,GAAW,EAAEC,qBAA+B,EAAE;AsBsC1G,EtBrCE,IF+VI,EE/VE9Z,CAAAA,AsBqCCkqC,GxB0TGz5B,AE/VAiJ,EF+VE,GAAGpJ,GwB1TIwN,CAAAA,CxB0TC,CAACjc,EwB1TE,CxB0TC,CE/VEsX,AsBqCDgD,CtBrCChD,IsBqCI,CtBrCJA,CAAAA,AsBqCM;EtBpChC,AsBsCA,IxByTI,EE/VE5X,AsBsCAmS,CtBtCAnS,CF+VEmP,EAAE,AE/VAgJ,QsBsCWoE,GAAAA,ItBtCKlE,AsBsCLkE,CtBtCKlE,AsBsCAqvB,KtBtCArvB,CAAAA,IsBsCU,CAACjG,KAAK;EtBrC1C,AsBsCA,IxByTI,EE/VEvT,AsBsCAke,CtBtCAle,GF+VIuQ,AE/VA+I,AsBsCJ4E,CxByTK,EwBzTER,CxByTCvN,GwBzTIs4B,CAAAA,ExByTE,IwBzTI,CxByTCn4B,AE/VCmJ,CAAAA,CF+VC,CwBzTCiE,CtBtCFjE,CF+VI,AE/VJA,EsBsCOgvB,CxByTA,AwBzTAA,GxByTGt4B,GwBzTG,CAAC+N,ExByTE,EwBzTE;EtBrC5C,AsBsCA,IxByTI,AwBzTA,CAACA,CtBtCCvE,GsBsCK,CxByTDnY,CAAC,AwBzTA,GxByTG,CAAC,GAAG+O,AE/VZoJ,CF+Va,EE/VEL,CF+VC,CAAC,aE/VFA,CAAgBnY,CAAIvB,GAAAA,CAAAA,CAAAA;EACzC,EsBsCE,ExByTE,EE/VEga,IF+VIha,CAAC,GAAGwQ,EAAE,AE/VVwJ,CF+VWha,CAAC,CE/VC0Z,EF+VEjJ,EAAE,CAACzQ,CAAC,SE/VN0Z,CAAgBtZ,CAAIJ,GAAAA,CAAAA,CAAAA;EACvC,IF+VI,EE/VEia,IF+VIrJ,EAAE,GAAG,CAAC,CAAChP,CAAC,AE/VZqY,GF+Veja,AE/VA0Z,CF+VC,KAAK,CAAC,CAAC,GAAG9X,CAAC,GAAG,AE/Vf8X,CF+VgB9X,AE/VA5B,CF+VC,AE/VGuB,GF+VAvB,AE/VAuB,CF+VC,AE/VDA,CAAAA,IF+VM,CAAC,GAAGK,CAAC,GAAG5B,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG;EE9VrE,AsBuCAmc,IxBwTIzL,CwBxTIyL,CxBwTF,AE/VAjC,EsBuCEiC,CxBwTC,CAAC,GAAGvL,AwBxTLuL,ExBwTO,CE/VTjC,CsBuCW4D,EtBvCEpE,EsBuCFoE,CAAKO,OAAO,KtBvCV3E,CAAgB1Z,CAAII,GAAAA,CAAAA,CAAAA;EACvC,AsBuCA,IxBwTIoQ,CwBxTC,CxBwTC,CAAC7P,AE/VAX,CF+VC,AE/VDA,GF+VI,AwBxTA82B,EtBvCEv1B,CAAAA,CF+VE,EwBxTJu1B,CxBwTOlmB,AE/VA5Q,CAAMI,CF+VJ,CwBxTC+b,ExBwTE3L,CE/VCpQ,CF+VC,AE/VDA,CF+VEO,AwBxTE,CxBwTD,CwBxTC,CtBvCEmZ,CF+VApJ,EAAE,GAAGD,EAAE,CAAC9P,CAAC,GAAG,GAAG,KE/VfmZ,IAAyBvY,CAAMnB,KAAAA,CAAAA,IACvD2Z,YAAeC,GAAAA,UAAAA,IAAcC,YAAeC,GAAAA,UAAAA;AACpD,IsBsCI,ExBwTE1J,EAAE,CAAC5P,CAAC,AwBxTA4nC,GxBwTG,GwBxTHA,CxBwTO,EwBxTE1R,CxBwTClmB,EAAE,GAAGJ,AwBxTNsmB,CAAOqS,CxBwTC,CAACvoC,CAAC,GAAG8P,CwBxTC,CxBwTC,GAAGD,EAAE,CAAC7P,CAAC,GAAG,GAAG;AE5V/C,IsBqCI,ExBwTE4P,EAAE,AwBxTA,CxBwTCvQ,AwBxTAuoC,CxBwTC,GAAG,EwBxTJA,ExBwTQ,EwBxTEA,CxBwTC53B,EAAE,GAAGJ,AwBxTA,CAAC8N,CxBwTC,CAACre,CAAC,CwBxTE,CAAA,CxBwTCyQ,EAAE,EwBxTEtP,CxBwTCqP,EAAE,CAACxQ,CAAC,GAAG,CwBxTKuoC,ExBwTF,EwBxTEA,MAAM,CAAClqB,IAAAA,CAAK,CAAC5K,YAAAA,CAAa,KAAKtS,SAAW,EAAA;MxByTrFoP,AwBxTA,ExBwTE,CAACxQ,CAAC,GAAG2Q,CAAC,GAAGH,EAAE,CAACxQ,CAAC,GAAG,CAAC,CAAC,GAAG2Q,CAAC,IAAIF,EAAE,CAACzQ,CAAC;MAChC,IAAI,CAAC6B,GAAG,GAAG2O,EAAE;IACf,AwBxTA,OAAOg4B,MAAM,CAAClqB,IAAK,CAAA,CAAC5K,YAAa,CAAA;IxByTjC,AwBxTA,IAAI80B,GxBwTG,GwBxTG,CxBwTC,AwBxTAlqB,IAAK,CAAA,CAACorB,aAAa,KAAKtoC,SAAAA,IAAaonC,MAAM,CAAClqB,IAAAA,CAAK,CAACorB,aAAa,CAACh2B,YAAAA,CAAa,KAAKtS,SAAW,EAAA;ExByT1G,IwBxTI,OAAOonC,MAAM,CAAClqB,IAAAA,CAAK,CAACorB,aAAa,CAACh2B,YAAa,CAAA;ExByTnD1E,WAAWA,CAACsB,KAAK,EAAEnB,CAAC,EAAE;AE5VjB,EsBqCL,ExBwTE,IAAImB,CE7VQ6J,IF6VH,EAAE,KE7VaxI,CAAAA,KAAa,EAAEzS,GAAW,EAAED,GAAW,EAAE;AsBsCrE,EtBrCE,IF6VI,GE7VGD,CF6VC,CAACiR,EE7VFjR,CAAKC,CF6VC,EE7VE,CF6VC+P,AE7VA9P,GAAAA,EAAKF,IAAKE,CAAAA,CF6VC,CAAC,CE7VC,CAACD,EF6VE,CAACgR,AE7VE0B,EAAAA,EF6VE,EAAErB,CE7VJqB,CAAAA,CAAAA,EF6VS,CAAC1B,IAAI,EAAEd,CAAC,CAAC;AE5VvD,AsBsCA,IxBuTI,EwBvTEg7B,kBAAqB,GAAC7gB,IAASA,IAAAA,IAAAA,KAAS,OAAA,IAAWA,IAAS,KAAA,MAAA;AtBpClE,AsBqCA,IxBuTI,EwBvTE8gB,KxBuTK,IAAI,OwBvTTA,GAAmB,CAACC,MAAAA,EAAQC,MAAWA,KAAAA,MAAAA,GAASD,MAASt8B,GAAAA,MAAAA,CAAO0B,MAAM,CAAC,CAAA,CAAC,EAAG46B,MAAO,CAAA;AACxF,ExBuTE,IwBvTIE,WAAc,GAAA,CAACC,QAAU1sB,EAAAA,IAAAA,EAAMyG,KAAUimB,KAAAA,QAAAA,IAAY,CAAC1sB,IAAAA,CAAK2sB,MAAM,IAAI3sB,IAAK4sB,CAAAA,QAAQ,IACnF;ExBuTHn7B,AwBvTIzB,IAAMw5B,CxBuTL/3B,CAAA,AwBvTK+3B,ExBuTF,qBwBvTEA,CAAwB/iB,KAAAA,EAAO,IAAI,CAAA;AtBpC9C,EsBoCiDtJ,ExBwT9C,IwBxT8CA,EAAQ,CxBwT/C,IAAInL,KAAK,CAAC,IAAI,CAACjO,GAAG,CAAC;AE3VvB,AsBmCuD,CAAA,CxByT5D,OE5VcuY,WAAYzI,CAAAA,KAAa,EAAE;AsBqC5B,ExBwTbzQ,AE5VA,IsBoCmBypC,CxBwTdzpC,CAAClB,CAAC,AE5VAma,EF4VE,SE5VFA,CAAYxI,EsBoCAg5B,CAAAA,EtBpCO,EAAA,CAAC,KAAO,EAAA,KAAA,CAAA;AACpC,EsBwCE,ExBoTE,IAAI,CAAC16B,AwBpTA8R,IxBoTI,CAAC/hB,CAAC,EwBpTK,CxBoTFV,EwBpTE,CxBoTC,AwBpTD,CxBoTEU,AwBpTC,CxBoTA,CAAC;AE1VxB,EsB2CE,ExBgTE,KwBhTK4qC,ExBgTE,IAAI,YwBhTe,GAAA,IAAI;ExBiThC,AwB5SA,OAAOC,eAAkB,GAAA,IAAI;ExB6S7Bh6B,AwBvSAd,OxBuSOc,CAACxB,GwBvSIkV,CAAAA,CxBuSC,EAAE,EwBvSE,EAAE7Q,YAAY,EAAE;IxBwS/B,AwBvSA,IAAI,CAAC6Q,CxBuSC1iB,GAAG,CwBvSC,ExBuSE,CwBvSC0iB,GxBuSG,CAACtU,CwBvSJsU,GxBuSQ;IACrB1iB,AwBvSA,GxBuSG,CAAC7B,AwBvSA,CxBuSC,AwBvSAimB,IxBuSI,AwBvSA,CxBuSC,EwBvSE1B,CxBuSClV,IwBvSDkV,CxBuSM,AwBvSA0E,GAAG;IxBwSrB,AwBvSA,IAAI,CAACtV,ExBuSE,GwBvSG,CxBuSC,EwBvSED,YAAAA;ExBwSf,EwBvSE,IAAI,CAACo3B,eAAe,GAAG,CAAA,CAAC;AtBnDrB,EF2VLh6B,EwBvSE,IAAI,CtBpDQuJ,AsBoDP6uB,ExBuSEp4B,CAAA,EAAG,KE3VEuJ,CAAW1I,AsBoDP,GAAG,EtBpDiB,EAAEiI,AsBoDf,CAACmxB,ItBpD2B,EAAElxB,CsBoDtB,CAAA,CtBpDiC,AsBoDjC,EtBpDmC1C,OAAU,GAAA,IAAI,EAAE;EACpF,EF2VE,AwBvSA,IAAI,CtBpDCxF,AsBoDAq5B,CxBuSCnpC,GAAG,CE3VK7C,AsBoDJ,ExBuSE,CwBvSC,CtBpDCA,EF2VE,CAACiR,AwBvSA,CtBpDHjR,AsBoDIkqC,CtBpDChqC,EF2VE,CE3VC,CAAC0a,KAAOC,CsBoDD,CtBpDCA,AsBoDA7J,GtBpDA6J,CAAAA,AsBoDI,GtBpDG1C,OAAWxF,IAAAA,KAAAA,IAAS3S,IAAKC,CAAAA,GAAG,CAAC2a,KAAAA,EAAOC,GAAO1C,CAAAA,GAAAA,OAAAA;AACpF,IF2VI,AwBvSA,IAAI,CAAC/C,CxBuSCrD,GAAG,GAAGpS,AwBvSA,GAAGyC,ExBuSE,CAACS,GAAG,CAAClB,CAAC,CwBvSRS,ExBuSW,GAAG,GAAGS,GAAG,CAACjB,CAAC,GAAG,IAAI,GAAGiB,GAAG,CAAC5B,CAAC,GAAG,IAAI,CAAC;AG/gBzD,IHghBH4B,AwBtSA,GxBsSG,CAAClB,AwBtSA,CxBsSC,AGhhBO2Z,AqB0OPuc,GxBsSGh1B,GAAG,CAACjB,AG/gBd2Z,CH+gBe,AG/gBfA,AqByOe,GxBsSG1Y,AwBtSA,ErBzOF,CH+gBK,CAAC5B,AG9gBtB0R,CH8gBuB,AwBtSA,GxBsSGZ,CG9gBb,EH8gBgB,AG7gB7ByJ,GAAgC,EAChC;EACAA,EH4gBE,AwBtSA,CrBtOIA,GAAAA,AqBsOA,CAACywB,ExBsSE,AG5gBHzwB,GqBsOM,CxBsSC,CG5gBE7G,CqBsOAvS,IrBtOAuS,IAAU4G,CqBsOVnZ,IrBtOe,CAACuS,KAAAA,CAAM,GAAGhC,KAAI,CAAA;EH6gB5C,AG5gBA,EqBsOE,ErBtOE8I,EAAAA,AqBsOE,CAACywB,ErBtOE3wB,KAAMvZ,CAAAA,GqBsOG,GrBtOG,AqBsOAI,GrBtOG,CAAA,KqBsOHA;ExBuSrB4P,AG5gBA,EqBsOE,ErBtOE0J,EAAK,AqBsOH,CxBsSC1J,AwBtSAm6B,CxBsSC97B,CG5gBC,CAAA,GH4gBI,EAAE,MwBtSM,GAAGjO,SAAAA;ErBrOxB,EH4gBE,AwBtSA,ErBtOEuZ,EqBsOE,CrBtOFA,AqBsOGywB,CxBsSCvpC,GAAG,GAAG,GwBtSG,CxBsSC,CAACoO,CwBtSC7O,GxBsSG,MwBtSHA;ErBpOpB,EH2gBES,AwBtSA,GxBsSG,CAAC7B,AwBtSA,CxBsSC,AG3gBAya,AqBqOA4wB,ErBrOA5wB,EH2gBI,CAAC,AG3gBAC,EAAAA,CH2gBGrL,EG3gBE,AqBqOA,CrBrOG,EH2gBA,AG3gBA,AqBqOAjO,SAAAA;IxBuSlB,AG3gBAuZ,AqBqOA,GrBrOM,CqBqOF,CAAC2wB,CrBrOE5wB,CH2gBA,CG3gBAA,GH2gBI,AG3gBCD,EAAO,IAAA,CAAA,MqBqOK,GAAG,KAAK;ExBuSlC,EG3gBE,AqBqOA,IrBrOID,AqBqOA,CAAC+wB,ErBrOD/wB,CAAIG,GAAM,CAAA,EAAA,SqBqOS,GAAG,KAAK;ExBuSjC1J,EwBtSE,ErBrOEyJ,EH2gBEzJ,AG3gBG0J,AqBqOH,CxBsSA,AwBtSC6wB,ExBsSE,AG3gBA7wB,GAAAA,GqBqOM,GAAGvZ,SAAAA;IxBuShB,AwBtSA,CrBrOO,GqBqOH,CAACqqC,CxBsSC7sC,CAAC,AG3gBA,GH2gBG,IAAI,AwBtSA,CxBsSCqR,EwBtSE,ExBsSE,AwBtSA;IxBuSnBrR,AwBtSA,CxBsSC,CAAC+B,AG3gBA8Z,CH2gBC,CG3gBIE,AqBqOH,CAACiwB,CxBsSC,CG3gBCjwB,EH2gBE,CG3gBFA,EH2gBK/b,CAAC,CAAC+B,CAAC,QwBtSQ,GAAG,GAAA,CAAA,MAAA,CAAWiqC,kBAAkB;IxBuSvDhsC,AwBtSA,CxBsSC,CAACgC,CAAC,CwBtSC,CAACiqC,CxBsSC,GAAG,GAAGjsC,CAAC,CAACgC,CAAC,KwBtSK,GAAG,GAAA,CAAA,MAAA,CAAWiqC,eAAe;ErBpOnD,EH2gBEjsC,AwBrSA,CxBqSC,CAACqB,CAAC,CwBrSC,CAACyrC,CxBqSC,GAAG,GAAG9sC,CAAC,CAACqB,CAAC,AwBrSA,CAAA,CAAA;ErBpOjB,AqBqOA,ExBqSE,KG1gBK,EH0gBE,IAAI;EACb,AwBpSAyrC,ErBvOQhxB,EAAAA,MqBuOK,CA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ACmR,Ib36BM,Ca26BD,Cb36BC,Aa26BA,Cb36BA,Aa26BG7Y,EAAAA,KAAAA,CAAAA;Mb16Bd2H,eAAAA,EAAiB,IAAI;Ia66BvB,Eb56BEC,Ea46BEsrB,Ob56BFtrB,Aa46BEsrB,Eb56BS,Ca46BCD,Gb56BG,Ia46BM,EAAA;Mb36BrBprB,Aa46BA,IAAI,CAACsrB,Kb56BO,EAAA,CAAA,Oa46BQ,CAACF,OAAAA,EAASC,OAAAA,GAAUD,OAAS9D,EAAAA,gBAAAA,CAAAA;KAC5C,Cb56BLrnB,Ka46BK,Ib56BLA,Aa46BSorB,Eb56BE,CAACnrB,IAAAA,Aa46BHmrB,Eb56BSh9B,Ca46BC+8B,Mb56BW/8B,Ca46BF,EAAA,Eb56BEA,OAAAA,CAAQwR,SAAS;MAC/CM,Aa46BA,IAAI,CAACorB,Ib56BLprB,EAAW,CAACD,IAAAA,EAAM7R,Ea46BE,CAACg9B,Ib56BSh9B,Ga46BTg9B,Eb56BSh9B,Aa46BA+8B,Ob56BA/8B,Aa46BUg9B,Cb56BF9gC,Ea46BE8gC,Gb56BG,Ia46BHA,CAAAA;Mb36BxC9rB,MAAAA,EAAQ;Ea66BZ,Eb56BE,CAAA;Eai7BF+rB,Eb/6BElrB,MAAQ,EAAA,Ka+6BVkrB,CAAgBz3B,KAAK,EAAEsE,KAAK,EAAEmvB,gBAAAA,GAAmB,IAAI,EAAE;IACrD,Eb/6BEhoB,Ia+6BIvH,Gb/6BJuH,Ca+6BIvH,Cb/6BK,Ea+6BE,Eb/6BE,Ea+6BE,CAACorB,WAAW;IAC7B,Eb/6BE9iB,IAAAA,Aa+6BI2E,Eb/6BE,EAAE,Aa+6BJA,GAAOjN,IAAAA,CAAKiN,IAAI;IACtB,Eb/6BE1E,Ia+6BIxM,GAAAA,Gb/6BQ,Aa+6BFD,Eb/6BE,GAAA,Aa+6BMsE,GAAAA,KAAAA;IACpB,Eb/6BEoI,Ea+6BExkB,CAAAA,Eb/6BK,EAAA;IACT,Aag7BA,Cbh7BA,Kag7BMyvC,IAAAA,GAAQtb,GAAQ,IAAA;Ib76BtB1P,Ea86BE0P,Gb96BK,Aa86BLA,CAAIj1B,Cb96BC,Ka86BK,IAAIkd,KAAAA;Mb56BdmH,Aa66BA,KAAKvjB,CAAAA,Cb76BLujB,EAAS,Aa66BA4Q,GAAIj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ACnD,Ac/EAswB,Md+EMnhB,OAAAA,Ec/ENmhB,Cd+EgB/R,Ac/EAle,IAAI,EAAEiN,Ed+ENiR,CAAS7Y,Cc/EC,Ed+EE,Ac/EAvJ,Id+EI4hB,Cc/EC,Ed+EMS,Ac/EJ/d,Id+EI+d,Cc/EC,EAAE,Id+EHA,CAAQ9Y,GAAG,CAAD;EAEjD,EchFE,EdgFE,KchFKyT,iBAAAA,CAA4BilB,IAAI,CAAC,IAAI,CAAE/9B,CAAAA,IAAAA,EAAMiN,IAAAA,EAAMnR,KAAOsE,EAAAA,KAAAA,CAAAA;EACnE,Ed+EKoI,KAAAA;Ec7ELif,Ed6EY/Y,Ic7EZ+Y,CAAOjc,IAAI,EAAE;Ed6EDkD,CAAO,Cc5EjB,Ed4EoBjI,Ic5EdzG,Cd4EcyG,Gc5EdzG,GAAO,IAAI,CAACorB,WAAW;Ed6E/B,Ec5EE,Ed4EEpN,Ic5EIvM,IAAAA,Cd4EO,EAAA,Ac5EAzR,IAAAA,CAAKgsB,OAAO;Id6EzBxjB,Ac5EA,Kd4EAA,Cc5EMvI,Gd4EGie,Gc5EMle,GAAAA,Ed4EGwI,CAAAA,Cc5EHxI,CAAKiN,Gd4EG,Cc5EC,Ed4EEkR,Ec5EE,EAAE,Gd4EJA,CAAQ3V,KAAK;IACvCkG,Ac5EA,Md4EAA,Ac5EM0hB,Id4EIlS,Ec5EKle,GAAAA,Gd4EI0O,CAAAA,Ac5EJ1O,CAAKM,Kd4EK,Cc5EC,CAAC+vB,Cd4EClS,OAAAA,CAAQzP,Ac5EA,CAAA,CAAA,Id4EM;IczE1C+C,IAAAA,CAAKxR,MAAM,GAAGA,MAAAA;Ed2EhB,EczEE,IAAIuL,CdyEC,GczEDA,KAAS,QAAU,EAAA;Id0EvBpmB,CAAGlE,CczED,CdyECA,IAAAA,CAAKL,AczEAyV,KdyEK,CAAC,CAAClR,AczEG,CdyECypB,EczED,CdyECA,GczEG,CAAC6iB,GdyEE,IAAKlpB,KAAAA,GAAQ8F,MAAO9F,CAAAA,KAAK,CczEC,CAACgD,CdyEC2C,GczED3C,CAAAA,mBdyEC2C,CAAAA;IACrD5W,CAAGrW,CczED,CdyECA,GczEG,CdyEHA,AczEI,CdyECL,GczEG,CAACyV,CdyEC,CAAC,CAACiB,CAAIuX,GAAAA,AczEA,CAAC3C,MdyEK,EczEG,Edy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","file":"chart.ec9807b9.js","sourceRoot":"..","sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"]}